{
	"id": "942e3aaa1407dcbecba114b77635d3c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/farm/GenericStake.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport  \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\";\n\nimport \"../helpers/IBEP20.sol\";\nimport \"../helpers/SafeBEP20.sol\";\n\ncontract WakandaPoolInitializable is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeBEP20 for IBEP20;\n\n    // The address of the Generic Stake factory\n    address public GenericStakeFactory;\n\n    // Whether a limit is set for users\n    bool public hasUserLimit;\n\n    // Whether it is initialized\n    bool public isInitialized;\n\n    // Accrued token per share\n    uint256 public accTokenPerShare;\n    uint256 public stakedByUsers;\n\n    // The block number when WKD mining ends.\n    uint256 public bonusEndBlock;\n\n    // The block number when WKD mining starts.\n    uint256 public startBlock;\n\n    // The block number of the last pool update\n    uint256 public lastRewardBlock;\n\n    // The pool limit (0 if none)\n    uint256 public poolLimitPerUser;\n\n    // WKD tokens created per block.\n    uint256 public rewardPerBlock;\n\n    // The precision factor\n    uint256 public PRECISION_FACTOR;\n\n    // The reward token\n    IBEP20 public rewardToken;\n\n    // The staked token\n    IBEP20 public stakedToken;\n\n    // Info of each user that stakes tokens (stakedToken)\n    mapping(address => UserInfo) public userInfo;\n\n    struct UserInfo {\n        uint256 amount; // How many staked tokens the user has provided\n        uint256 rewardDebt; // Reward debt\n    }\n\n    event AdminTokenRecovery(address tokenRecovered, uint256 amount);\n    event Deposit(address indexed user, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 amount);\n    event NewStartAndEndBlocks(uint256 startBlock, uint256 endBlock);\n    event NewRewardPerBlock(uint256 rewardPerBlock);\n    event NewPoolLimit(uint256 poolLimitPerUser);\n    event RewardsStop(uint256 blockNumber);\n    event Withdraw(address indexed user, uint256 amount);\n\n    constructor() public {\n        GenericStakeFactory = msg.sender;\n    }\n\n    /*\n     * @notice Initialize the contract\n     * @param _stakedToken: staked token address\n     * @param _rewardToken: reward token address\n     * @param _rewardPerBlock: reward per block (in rewardToken)\n     * @param _startBlock: start block\n     * @param _bonusEndBlock: end block\n     * @param _poolLimitPerUser: pool limit per user in stakedToken (if any, else 0)\n     * @param _admin: admin address with ownership\n     */\n    function initialize(\n        IBEP20 _stakedToken,\n        IBEP20 _rewardToken,\n        uint256 _rewardPerBlock,\n        uint256 _startBlock,\n        uint256 _bonusEndBlock,\n        uint256 _poolLimitPerUser,\n        address _admin\n    ) external {\n        require(!isInitialized, \"Already initialized\");\n        require(msg.sender == GenericStakeFactory, \"Not factory\");\n\n        // Make this contract initialized\n        isInitialized = true;\n\n        stakedToken = _stakedToken;\n        rewardToken = _rewardToken;\n        rewardPerBlock = _rewardPerBlock;\n        startBlock = _startBlock;\n        bonusEndBlock = _bonusEndBlock;\n\n        if (_poolLimitPerUser > 0) {\n            hasUserLimit = true;\n            poolLimitPerUser = _poolLimitPerUser;\n        }\n\n        uint256 decimalsRewardToken = uint256(rewardToken.decimals());\n        require(decimalsRewardToken < 30, \"Must be inferior to 30\");\n\n        PRECISION_FACTOR = uint256(10**(uint256(30).sub(decimalsRewardToken)));\n\n        // Set the lastRewardBlock as the startBlock\n        lastRewardBlock = startBlock;\n\n        // Transfer ownership to the admin address who becomes owner of the contract\n        transferOwnership(_admin);\n    }\n\n    /*\n     * @notice Deposit staked tokens and collect reward tokens (if any)\n     * @param _amount: amount to withdraw (in rewardToken)\n     */\n    function deposit(uint256 _amount) external nonReentrant {\n        UserInfo storage user = userInfo[msg.sender];\n\n        if (hasUserLimit) {\n            require(\n                _amount.add(user.amount) <= poolLimitPerUser,\n                \"User amount above limit\"\n            );\n        }\n        stakedByUsers += _amount;\n\n        _updatePool();\n\n        if (user.amount > 0) {\n            uint256 pending = user\n                .amount\n                .mul(accTokenPerShare)\n                .div(PRECISION_FACTOR)\n                .sub(user.rewardDebt);\n            if (pending > 0) {\n                rewardToken.safeTransfer(address(msg.sender), pending);\n            }\n        }\n\n        if (_amount > 0) {\n            user.amount = user.amount.add(_amount);\n            stakedToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n        }\n\n        user.rewardDebt = user.amount.mul(accTokenPerShare).div(\n            PRECISION_FACTOR\n        );\n\n        emit Deposit(msg.sender, _amount);\n    }\n\n    /*\n     * @notice Withdraw staked tokens and collect reward tokens\n     * @param _amount: amount to withdraw (in rewardToken)\n     */\n    function withdraw(uint256 _amount) external nonReentrant {\n        UserInfo storage user = userInfo[msg.sender];\n        require(user.amount >= _amount, \"Amount to withdraw too high\");\n        stakedByUsers -= _amount;\n\n        _updatePool();\n\n        uint256 pending = user\n            .amount\n            .mul(accTokenPerShare)\n            .div(PRECISION_FACTOR)\n            .sub(user.rewardDebt);\n\n        if (_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            stakedToken.safeTransfer(address(msg.sender), _amount);\n        }\n\n        if (pending > 0) {\n            rewardToken.safeTransfer(address(msg.sender), pending);\n        }\n\n        user.rewardDebt = user.amount.mul(accTokenPerShare).div(\n            PRECISION_FACTOR\n        );\n\n        emit Withdraw(msg.sender, _amount);\n    }\n\n    function availableRewards() public view returns (uint) {\n        return stakedToken.balanceOf(address(this)) - stakedByUsers;\n    }\n\n    /*\n     * @notice Withdraw staked tokens without caring about rewards rewards\n     * @dev Needs to be for emergency.\n     */\n    function emergencyWithdraw() external nonReentrant {\n        UserInfo storage user = userInfo[msg.sender];\n        uint256 amountToTransfer = user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n\n        if (amountToTransfer > 0) {\n            stakedToken.safeTransfer(address(msg.sender), amountToTransfer);\n            stakedByUsers -= amountToTransfer;\n        }\n\n        emit EmergencyWithdraw(msg.sender, user.amount);\n    }\n\n    /*\n     * @notice Stop rewards\n     * @dev Only callable by owner. Needs to be for emergency.\n     */\n    function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {\n        require(_amount <= availableRewards());\n        rewardToken.safeTransfer(address(msg.sender), _amount);\n    }\n\n    /**\n     * @notice It allows the admin to recover wrong tokens sent to the contract\n     * @param _tokenAddress: the address of the token to withdraw\n     * @param _tokenAmount: the number of tokens to withdraw\n     * @dev This function is only callable by admin.\n     */\n    function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount)\n        external\n        onlyOwner\n    {\n        require(\n            _tokenAddress != address(stakedToken),\n            \"Cannot be staked token\"\n        );\n\n        IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount);\n\n        emit AdminTokenRecovery(_tokenAddress, _tokenAmount);\n    }\n\n    /*\n     * @notice Stop rewards\n     * @dev Only callable by owner\n     */\n    function stopReward() external onlyOwner {\n        bonusEndBlock = block.number;\n    }\n\n    /*\n     * @notice Update pool limit per user\n     * @dev Only callable by owner.\n     * @param _hasUserLimit: whether the limit remains forced\n     * @param _poolLimitPerUser: new pool limit per user\n     */\n    function updatePoolLimitPerUser(\n        bool _hasUserLimit,\n        uint256 _poolLimitPerUser\n    ) external onlyOwner {\n        require(hasUserLimit, \"Must be set\");\n        if (_hasUserLimit) {\n            require(\n                _poolLimitPerUser > poolLimitPerUser,\n                \"New limit must be higher\"\n            );\n            poolLimitPerUser = _poolLimitPerUser;\n        } else {\n            hasUserLimit = _hasUserLimit;\n            poolLimitPerUser = 0;\n        }\n        emit NewPoolLimit(poolLimitPerUser);\n    }\n\n    /*\n     * @notice Update reward per block\n     * @dev Only callable by owner.\n     * @param _rewardPerBlock: the reward per block\n     */\n    function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {\n        rewardPerBlock = _rewardPerBlock;\n        emit NewRewardPerBlock(_rewardPerBlock);\n    }\n\n    /**\n     * @notice It allows the admin to update start and end blocks\n     * @dev This function is only callable by owner.\n     * @param _startBlock: the new start block\n     * @param _bonusEndBlock: the new end block\n     */\n    function updateStartAndEndBlocks(\n        uint256 _startBlock,\n        uint256 _bonusEndBlock\n    ) external onlyOwner {\n        require(block.number < startBlock, \"Pool has started\");\n        require(\n            _startBlock < _bonusEndBlock,\n            \"New startBlock must be lower than new endBlock\"\n        );\n        require(\n            block.number < _startBlock,\n            \"New startBlock must be higher than current block\"\n        );\n\n        startBlock = _startBlock;\n        bonusEndBlock = _bonusEndBlock;\n\n        // Set the lastRewardBlock as the startBlock\n        lastRewardBlock = startBlock;\n\n        emit NewStartAndEndBlocks(_startBlock, _bonusEndBlock);\n    }\n\n    /*\n     * @notice View function to see pending reward on frontend.\n     * @param _user: user address\n     * @return Pending reward for a given user\n     */\n    function pendingReward(address _user) external view returns (uint256) {\n        UserInfo storage user = userInfo[_user];\n        uint256 stakedTokenSupply = stakedByUsers;\n        if (block.number > lastRewardBlock && stakedTokenSupply != 0) {\n            uint256 multiplier = _getMultiplier(lastRewardBlock, block.number);\n            uint256 wakandaReward = multiplier.mul(rewardPerBlock);\n            uint256 adjustedTokenPerShare = accTokenPerShare.add(\n                wakandaReward.mul(PRECISION_FACTOR).div(stakedTokenSupply)\n            );\n            return\n                user\n                    .amount\n                    .mul(adjustedTokenPerShare)\n                    .div(PRECISION_FACTOR)\n                    .sub(user.rewardDebt);\n        } else {\n            return\n                user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(\n                    user.rewardDebt\n                );\n        }\n    }\n\n    /*\n     * @notice Update reward variables of the given pool to be up-to-date.\n     */\n    function _updatePool() internal {\n        if (block.number <= lastRewardBlock) {\n            return;\n        }\n\n        uint256 stakedTokenSupply = stakedByUsers;\n\n        if (stakedTokenSupply == 0) {\n            lastRewardBlock = block.number;\n            return;\n        }\n\n        uint256 multiplier = _getMultiplier(lastRewardBlock, block.number);\n        uint256 wakandaReward = multiplier.mul(rewardPerBlock);\n        accTokenPerShare = accTokenPerShare.add(\n            wakandaReward.mul(PRECISION_FACTOR).div(stakedTokenSupply)\n        );\n        lastRewardBlock = block.number;\n    }\n\n    /*\n     * @notice Return reward multiplier over the given _from to _to block.\n     * @param _from: block to start\n     * @param _to: block to finish\n     */\n    function _getMultiplier(uint256 _from, uint256 _to)\n        internal\n        view\n        returns (uint256)\n    {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from);\n        } else if (_from >= bonusEndBlock) {\n            return 0;\n        } else {\n            return bonusEndBlock.sub(_from);\n        }\n    }\n\n    function totalWKDStaked() public view returns (uint) {\n        return stakedByUsers;\n    }\n}\n"
			},
			"src/helpers/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./IBEP20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\";\n\n/**\n * @title SafeBEP20\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeBEP20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(\n        IBEP20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transfer.selector, to, value)\n        );\n    }\n\n    function safeTransferFrom(\n        IBEP20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n        );\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IBEP20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(token.approve.selector, spender, value)\n        );\n    }\n\n    function safeIncreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(\n            value\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    function safeDecreaseAllowance(\n        IBEP20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\n            value\n        );\n        _callOptionalReturn(\n            token,\n            abi.encodeWithSelector(\n                token.approve.selector,\n                spender,\n                newAllowance\n            )\n        );\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(\n            data,\n            \"SafeBEP20: low-level call failed\"\n        );\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(\n                abi.decode(returndata, (bool)),\n                \"SafeBEP20: BEP20 operation did not succeed\"\n            );\n        }\n    }\n}\n"
			},
			"src/helpers/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the bep token owner.\n     */\n    function getOwner() external view returns (address);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address _owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../GSN/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":630:5208  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":630:5208  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203c22228b2c9f0a8ee23efefff96e07275c1cfe730d77df054e79dbb0787fba2064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c22228b2c9f0a8ee23efefff96e07275c1cfe730d77df054e79dbb0787fba2064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x22 0x22 DUP12 0x2C SWAP16 EXP DUP15 0xE2 RETURNDATACOPY INVALID SELFDESTRUCT 0xF9 PUSH15 0x7275C1CFE730D77DF054E79DBB078 PUSH32 0xBA2064736F6C634300060C003300000000000000000000000000000000000000 ",
							"sourceMap": "630:4578:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c22228b2c9f0a8ee23efefff96e07275c1cfe730d77df054e79dbb0787fba2064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x22 0x22 DUP12 0x2C SWAP16 EXP DUP15 0xE2 RETURNDATACOPY INVALID SELFDESTRUCT 0xF9 PUSH15 0x7275C1CFE730D77DF054E79DBB078 PUSH32 0xBA2064736F6C634300060C003300000000000000000000000000000000000000 ",
							"sourceMap": "630:4578:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 5208,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c22228b2c9f0a8ee23efefff96e07275c1cfe730d77df054e79dbb0787fba2064736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 5208,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 5208,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":134:6838  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":134:6838  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220365598120dadc257d0cef587c086ee32d58910c32394071921c372cb762c406d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365598120dadc257d0cef587c086ee32d58910c32394071921c372cb762c406d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SSTORE SWAP9 SLT 0xD 0xAD 0xC2 JUMPI 0xD0 0xCE CREATE2 DUP8 0xC0 DUP7 0xEE ORIGIN 0xD5 DUP10 LT 0xC3 0x23 SWAP5 SMOD NOT 0x21 0xC3 PUSH19 0xCB762C406D64736F6C634300060C0033000000 ",
							"sourceMap": "134:6704:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365598120dadc257d0cef587c086ee32d58910c32394071921c372cb762c406d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SSTORE SWAP9 SLT 0xD 0xAD 0xC2 JUMPI 0xD0 0xCE CREATE2 DUP8 0xC0 DUP7 0xEE ORIGIN 0xD5 DUP10 LT 0xC3 0x23 SWAP5 SMOD NOT 0x21 0xC3 PUSH19 0xCB762C406D64736F6C634300060C0033000000 ",
							"sourceMap": "134:6704:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6838,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220365598120dadc257d0cef587c086ee32d58910c32394071921c372cb762c406d64736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 6838,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6838,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 582,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/farm/GenericStake.sol": {
				"WakandaPoolInitializable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenRecovered",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AdminTokenRecovery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolLimitPerUser",
									"type": "uint256"
								}
							],
							"name": "NewPoolLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardPerBlock",
									"type": "uint256"
								}
							],
							"name": "NewRewardPerBlock",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startBlock",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endBlock",
									"type": "uint256"
								}
							],
							"name": "NewStartAndEndBlocks",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "RewardsStop",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "GenericStakeFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION_FACTOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accTokenPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "availableRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bonusEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "emergencyRewardWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasUserLimit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBEP20",
									"name": "_stakedToken",
									"type": "address"
								},
								{
									"internalType": "contract IBEP20",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bonusEndBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_poolLimitPerUser",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLimitPerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverWrongTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedByUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalWKDStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_hasUserLimit",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_poolLimitPerUser",
									"type": "uint256"
								}
							],
							"name": "updatePoolLimitPerUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardPerBlock",
									"type": "uint256"
								}
							],
							"name": "updateRewardPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bonusEndBlock",
									"type": "uint256"
								}
							],
							"name": "updateStartAndEndBlocks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"recoverWrongTokens(address,uint256)": {
								"details": "This function is only callable by admin.",
								"params": {
									"_tokenAddress": ": the address of the token to withdraw",
									"_tokenAmount": ": the number of tokens to withdraw"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateStartAndEndBlocks(uint256,uint256)": {
								"details": "This function is only callable by owner.",
								"params": {
									"_bonusEndBlock": ": the new end block",
									"_startBlock": ": the new start block"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/farm/GenericStake.sol\":452:12329  contract WakandaPoolInitializable is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"src/farm/GenericStake.sol\":2205:2275  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":882:899  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":902:914  _msgSender() */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":902:912  _msgSender */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":902:914  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":882:914  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":933:942  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":924:930  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":924:942  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":990:999  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":957:1000  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":986:987  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":957:1000  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":848:1007  constructor () internal {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1760:1767  _status */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1760:1782  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/farm/GenericStake.sol\":2258:2268  msg.sender */\n  caller\n    /* \"src/farm/GenericStake.sol\":2236:2255  GenericStakeFactory */\n  0x02\n  0x00\n    /* \"src/farm/GenericStake.sol\":2236:2268  GenericStakeFactory = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/farm/GenericStake.sol\":452:12329  contract WakandaPoolInitializable is Ownable, ReentrancyGuard {... */\n  jump(tag_10)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":651:666  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"src/farm/GenericStake.sol\":452:12329  contract WakandaPoolInitializable is Ownable, ReentrancyGuard {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/farm/GenericStake.sol\":452:12329  contract WakandaPoolInitializable is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ae39cac\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xb6b55f25\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf36cc893\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf40f0f52\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0xb6b55f25\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcc7a262e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xccd34cd5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x92e8990e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x92e8990e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9513997f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa0b40905\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9f8d181\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x8ae39cac\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8f662915\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x3f138d4b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80dc0672\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x83a5041c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x879d9090\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x3f138d4b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x514f4a42\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x66fe9f8a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x2de68155\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x2de68155\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3279beab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x01f8a976\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1aed6553\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/farm/GenericStake.sol\":8855:9027  function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {... */\n    tag_3:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"src/farm/GenericStake.sol\":1540:1584  mapping(address => UserInfo) public userInfo */\n    tag_4:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":959:987  uint256 public bonusEndBlock */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":12237:12327  function totalWKDStaked() public view returns (uint) {... */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":5291:6111  function withdraw(uint256 _amount) external nonReentrant {... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"src/farm/GenericStake.sol\":6938:7126  function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"src/farm/GenericStake.sol\":778:803  bool public isInitialized */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":7408:7786  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount)... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"src/farm/GenericStake.sol\":1042:1067  uint256 public startBlock */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":633:667  address public GenericStakeFactory */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":1193:1224  uint256 public poolLimitPerUser */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1706:1851  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"src/farm/GenericStake.sol\":7870:7956  function stopReward() external onlyOwner {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"src/farm/GenericStake.sol\":2713:3917  function initialize(... */\n    tag_16:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xe0\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"src/farm/GenericStake.sol\":6117:6248  function availableRewards() public view returns (uint) {... */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":1268:1297  uint256 public rewardPerBlock */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1083:1160  function owner() public view returns (address) {... */\n    tag_19:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":841:872  uint256 public accTokenPerShare */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":714:738  bool public hasUserLimit */\n    tag_21:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":9263:9947  function updateStartAndEndBlocks(... */\n    tag_22:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"src/farm/GenericStake.sol\":8174:8707  function updatePoolLimitPerUser(... */\n    tag_23:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"src/farm/GenericStake.sol\":1122:1152  uint256 public lastRewardBlock */\n    tag_24:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":4069:5147  function deposit(uint256 _amount) external nonReentrant {... */\n    tag_25:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"src/farm/GenericStake.sol\":1450:1475  IBEP20 public stakedToken */\n    tag_26:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":1332:1363  uint256 public PRECISION_FACTOR */\n    tag_27:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":6383:6826  function emergencyWithdraw() external nonReentrant {... */\n    tag_28:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2000:2240  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"src/farm/GenericStake.sol\":878:906  uint256 public stakedByUsers */\n    tag_30:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":10113:11046  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_31:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":1394:1419  IBEP20 public rewardToken */\n    tag_32:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/farm/GenericStake.sol\":8855:9027  function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_112\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"src/farm/GenericStake.sol\":8956:8971  _rewardPerBlock */\n      dup1\n        /* \"src/farm/GenericStake.sol\":8939:8953  rewardPerBlock */\n      0x09\n        /* \"src/farm/GenericStake.sol\":8939:8971  rewardPerBlock = _rewardPerBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":8986:9020  NewRewardPerBlock(_rewardPerBlock) */\n      0x0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df\n        /* \"src/farm/GenericStake.sol\":9004:9019  _rewardPerBlock */\n      dup2\n        /* \"src/farm/GenericStake.sol\":8986:9020  NewRewardPerBlock(_rewardPerBlock) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/farm/GenericStake.sol\":8855:9027  function updateRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1540:1584  mapping(address => UserInfo) public userInfo */\n    tag_45:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":959:987  uint256 public bonusEndBlock */\n    tag_47:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":12237:12327  function totalWKDStaked() public view returns (uint) {... */\n    tag_49:\n        /* \"src/farm/GenericStake.sol\":12284:12288  uint */\n      0x00\n        /* \"src/farm/GenericStake.sol\":12307:12320  stakedByUsers */\n      sload(0x04)\n        /* \"src/farm/GenericStake.sol\":12300:12320  return stakedByUsers */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":12237:12327  function totalWKDStaked() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":5291:6111  function withdraw(uint256 _amount) external nonReentrant {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2407:2414  _status */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":5358:5379  UserInfo storage user */\n      0x00\n        /* \"src/farm/GenericStake.sol\":5382:5390  userInfo */\n      0x0d\n        /* \"src/farm/GenericStake.sol\":5382:5402  userInfo[msg.sender] */\n      0x00\n        /* \"src/farm/GenericStake.sol\":5391:5401  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":5382:5402  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/farm/GenericStake.sol\":5358:5402  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":5435:5442  _amount */\n      dup2\n        /* \"src/farm/GenericStake.sol\":5420:5424  user */\n      dup2\n        /* \"src/farm/GenericStake.sol\":5420:5431  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":5420:5442  user.amount >= _amount */\n      lt\n      iszero\n        /* \"src/farm/GenericStake.sol\":5412:5474  require(user.amount >= _amount, \"Amount to withdraw too high\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416d6f756e7420746f20776974686472617720746f6f20686967680000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"src/farm/GenericStake.sol\":5501:5508  _amount */\n      dup2\n        /* \"src/farm/GenericStake.sol\":5484:5497  stakedByUsers */\n      0x04\n      0x00\n        /* \"src/farm/GenericStake.sol\":5484:5508  stakedByUsers -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":5519:5532  _updatePool() */\n      tag_121\n        /* \"src/farm/GenericStake.sol\":5519:5530  _updatePool */\n      tag_122\n        /* \"src/farm/GenericStake.sol\":5519:5532  _updatePool() */\n      jump\t// in\n    tag_121:\n        /* \"src/farm/GenericStake.sol\":5543:5558  uint256 pending */\n      0x00\n        /* \"src/farm/GenericStake.sol\":5561:5689  user... */\n      tag_123\n        /* \"src/farm/GenericStake.sol\":5673:5677  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":5673:5688  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":5561:5655  user... */\n      tag_124\n        /* \"src/farm/GenericStake.sol\":5638:5654  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":5561:5620  user... */\n      tag_125\n        /* \"src/farm/GenericStake.sol\":5603:5619  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":5561:5565  user */\n      dup8\n        /* \"src/farm/GenericStake.sol\":5561:5585  user... */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":5561:5602  user... */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":5561:5620  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"src/farm/GenericStake.sol\":5561:5637  user... */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":5561:5655  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"src/farm/GenericStake.sol\":5561:5672  user... */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":5561:5689  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"src/farm/GenericStake.sol\":5543:5689  uint256 pending = user... */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":5714:5715  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":5704:5711  _amount */\n      dup4\n        /* \"src/farm/GenericStake.sol\":5704:5715  _amount > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":5700:5848  if (_amount > 0) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"src/farm/GenericStake.sol\":5745:5769  user.amount.sub(_amount) */\n      tag_130\n        /* \"src/farm/GenericStake.sol\":5761:5768  _amount */\n      dup4\n        /* \"src/farm/GenericStake.sol\":5745:5749  user */\n      dup4\n        /* \"src/farm/GenericStake.sol\":5745:5756  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":5745:5760  user.amount.sub */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":5745:5769  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"src/farm/GenericStake.sol\":5731:5735  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":5731:5742  user.amount */\n      0x00\n      add\n        /* \"src/farm/GenericStake.sol\":5731:5769  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":5783:5837  stakedToken.safeTransfer(address(msg.sender), _amount) */\n      tag_131\n        /* \"src/farm/GenericStake.sol\":5816:5826  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":5829:5836  _amount */\n      dup5\n        /* \"src/farm/GenericStake.sol\":5783:5794  stakedToken */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":5783:5807  stakedToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"src/farm/GenericStake.sol\":5783:5837  stakedToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"src/farm/GenericStake.sol\":5700:5848  if (_amount > 0) {... */\n    tag_129:\n        /* \"src/farm/GenericStake.sol\":5872:5873  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":5862:5869  pending */\n      dup2\n        /* \"src/farm/GenericStake.sol\":5862:5873  pending > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":5858:5954  if (pending > 0) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"src/farm/GenericStake.sol\":5889:5943  rewardToken.safeTransfer(address(msg.sender), pending) */\n      tag_134\n        /* \"src/farm/GenericStake.sol\":5922:5932  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":5935:5942  pending */\n      dup3\n        /* \"src/farm/GenericStake.sol\":5889:5900  rewardToken */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":5889:5913  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"src/farm/GenericStake.sol\":5889:5943  rewardToken.safeTransfer(address(msg.sender), pending) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"src/farm/GenericStake.sol\":5858:5954  if (pending > 0) {... */\n    tag_133:\n        /* \"src/farm/GenericStake.sol\":5982:6059  user.amount.mul(accTokenPerShare).div(... */\n      tag_135\n        /* \"src/farm/GenericStake.sol\":6033:6049  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":5982:6015  user.amount.mul(accTokenPerShare) */\n      tag_136\n        /* \"src/farm/GenericStake.sol\":5998:6014  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":5982:5986  user */\n      dup6\n        /* \"src/farm/GenericStake.sol\":5982:5993  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":5982:5997  user.amount.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":5982:6015  user.amount.mul(accTokenPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"src/farm/GenericStake.sol\":5982:6019  user.amount.mul(accTokenPerShare).div */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":5982:6059  user.amount.mul(accTokenPerShare).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"src/farm/GenericStake.sol\":5964:5968  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":5964:5979  user.rewardDebt */\n      0x01\n      add\n        /* \"src/farm/GenericStake.sol\":5964:6059  user.rewardDebt = user.amount.mul(accTokenPerShare).div(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":6084:6094  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":6075:6104  Withdraw(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"src/farm/GenericStake.sol\":6096:6103  _amount */\n      dup5\n        /* \"src/farm/GenericStake.sol\":6075:6104  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2436:2437  _ */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":5291:6111  function withdraw(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":6938:7126  function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"src/farm/GenericStake.sol\":7036:7054  availableRewards() */\n      tag_141\n        /* \"src/farm/GenericStake.sol\":7036:7052  availableRewards */\n      tag_75\n        /* \"src/farm/GenericStake.sol\":7036:7054  availableRewards() */\n      jump\t// in\n    tag_141:\n        /* \"src/farm/GenericStake.sol\":7025:7032  _amount */\n      dup2\n        /* \"src/farm/GenericStake.sol\":7025:7054  _amount <= availableRewards() */\n      gt\n      iszero\n        /* \"src/farm/GenericStake.sol\":7017:7055  require(_amount <= availableRewards()) */\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n        /* \"src/farm/GenericStake.sol\":7065:7119  rewardToken.safeTransfer(address(msg.sender), _amount) */\n      tag_143\n        /* \"src/farm/GenericStake.sol\":7098:7108  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":7111:7118  _amount */\n      dup3\n        /* \"src/farm/GenericStake.sol\":7065:7076  rewardToken */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":7065:7089  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"src/farm/GenericStake.sol\":7065:7119  rewardToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"src/farm/GenericStake.sol\":6938:7126  function emergencyRewardWithdraw(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":778:803  bool public isInitialized */\n    tag_57:\n      0x02\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":7408:7786  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount)... */\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"src/farm/GenericStake.sol\":7576:7587  stakedToken */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":7551:7588  _tokenAddress != address(stakedToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":7551:7564  _tokenAddress */\n      dup3\n        /* \"src/farm/GenericStake.sol\":7551:7588  _tokenAddress != address(stakedToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"src/farm/GenericStake.sol\":7530:7636  require(... */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74206265207374616b656420746f6b656e00000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"src/farm/GenericStake.sol\":7647:7716  IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount) */\n      tag_149\n        /* \"src/farm/GenericStake.sol\":7690:7700  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":7703:7715  _tokenAmount */\n      dup3\n        /* \"src/farm/GenericStake.sol\":7654:7667  _tokenAddress */\n      dup5\n        /* \"src/farm/GenericStake.sol\":7647:7681  IBEP20(_tokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"src/farm/GenericStake.sol\":7647:7716  IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"src/farm/GenericStake.sol\":7732:7779  AdminTokenRecovery(_tokenAddress, _tokenAmount) */\n      0x74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab78129\n        /* \"src/farm/GenericStake.sol\":7751:7764  _tokenAddress */\n      dup3\n        /* \"src/farm/GenericStake.sol\":7766:7778  _tokenAmount */\n      dup3\n        /* \"src/farm/GenericStake.sol\":7732:7779  AdminTokenRecovery(_tokenAddress, _tokenAmount) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/farm/GenericStake.sol\":7408:7786  function recoverWrongTokens(address _tokenAddress, uint256 _tokenAmount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1042:1067  uint256 public startBlock */\n    tag_62:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":633:667  address public GenericStakeFactory */\n    tag_64:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1193:1224  uint256 public poolLimitPerUser */\n    tag_66:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1706:1851  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1812:1813  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1775:1815  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1796:1802  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1775:1815  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1842:1843  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1825:1831  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1825:1844  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1706:1851  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":7870:7956  function stopReward() external onlyOwner {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_155\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"src/farm/GenericStake.sol\":7937:7949  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":7921:7934  bonusEndBlock */\n      0x05\n        /* \"src/farm/GenericStake.sol\":7921:7949  bonusEndBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":7870:7956  function stopReward() external onlyOwner {... */\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":2713:3917  function initialize(... */\n    tag_73:\n        /* \"src/farm/GenericStake.sol\":2978:2991  isInitialized */\n      0x02\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/farm/GenericStake.sol\":2977:2991  !isInitialized */\n      iszero\n        /* \"src/farm/GenericStake.sol\":2969:3015  require(!isInitialized, \"Already initialized\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416c726561647920696e697469616c697a656400000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"src/farm/GenericStake.sol\":3047:3066  GenericStakeFactory */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":3033:3066  msg.sender == GenericStakeFactory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":3033:3043  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":3033:3066  msg.sender == GenericStakeFactory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/farm/GenericStake.sol\":3025:3082  require(msg.sender == GenericStakeFactory, \"Not factory\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7420666163746f7279000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"src/farm/GenericStake.sol\":3151:3155  true */\n      0x01\n        /* \"src/farm/GenericStake.sol\":3135:3148  isInitialized */\n      0x02\n      0x15\n        /* \"src/farm/GenericStake.sol\":3135:3155  isInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3180:3192  _stakedToken */\n      dup7\n        /* \"src/farm/GenericStake.sol\":3166:3177  stakedToken */\n      0x0c\n      0x00\n        /* \"src/farm/GenericStake.sol\":3166:3192  stakedToken = _stakedToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3216:3228  _rewardToken */\n      dup6\n        /* \"src/farm/GenericStake.sol\":3202:3213  rewardToken */\n      0x0b\n      0x00\n        /* \"src/farm/GenericStake.sol\":3202:3228  rewardToken = _rewardToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3255:3270  _rewardPerBlock */\n      dup5\n        /* \"src/farm/GenericStake.sol\":3238:3252  rewardPerBlock */\n      0x09\n        /* \"src/farm/GenericStake.sol\":3238:3270  rewardPerBlock = _rewardPerBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3293:3304  _startBlock */\n      dup4\n        /* \"src/farm/GenericStake.sol\":3280:3290  startBlock */\n      0x06\n        /* \"src/farm/GenericStake.sol\":3280:3304  startBlock = _startBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3330:3344  _bonusEndBlock */\n      dup3\n        /* \"src/farm/GenericStake.sol\":3314:3327  bonusEndBlock */\n      0x05\n        /* \"src/farm/GenericStake.sol\":3314:3344  bonusEndBlock = _bonusEndBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3379:3380  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":3359:3376  _poolLimitPerUser */\n      dup3\n        /* \"src/farm/GenericStake.sol\":3359:3380  _poolLimitPerUser > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":3355:3476  if (_poolLimitPerUser > 0) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"src/farm/GenericStake.sol\":3411:3415  true */\n      0x01\n        /* \"src/farm/GenericStake.sol\":3396:3408  hasUserLimit */\n      0x02\n      0x14\n        /* \"src/farm/GenericStake.sol\":3396:3415  hasUserLimit = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3448:3465  _poolLimitPerUser */\n      dup2\n        /* \"src/farm/GenericStake.sol\":3429:3445  poolLimitPerUser */\n      0x08\n        /* \"src/farm/GenericStake.sol\":3429:3465  poolLimitPerUser = _poolLimitPerUser */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3355:3476  if (_poolLimitPerUser > 0) {... */\n    tag_161:\n        /* \"src/farm/GenericStake.sol\":3486:3513  uint256 decimalsRewardToken */\n      0x00\n        /* \"src/farm/GenericStake.sol\":3524:3535  rewardToken */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":3524:3544  rewardToken.decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"src/farm/GenericStake.sol\":3524:3546  rewardToken.decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"src/farm/GenericStake.sol\":3516:3547  uint256(rewardToken.decimals()) */\n      0xff\n      and\n        /* \"src/farm/GenericStake.sol\":3486:3547  uint256 decimalsRewardToken = uint256(rewardToken.decimals()) */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":3587:3589  30 */\n      0x1e\n        /* \"src/farm/GenericStake.sol\":3565:3584  decimalsRewardToken */\n      dup2\n        /* \"src/farm/GenericStake.sol\":3565:3589  decimalsRewardToken < 30 */\n      lt\n        /* \"src/farm/GenericStake.sol\":3557:3616  require(decimalsRewardToken < 30, \"Must be inferior to 30\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d75737420626520696e666572696f7220746f20333000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"src/farm/GenericStake.sol\":3659:3695  uint256(30).sub(decimalsRewardToken) */\n      tag_167\n        /* \"src/farm/GenericStake.sol\":3675:3694  decimalsRewardToken */\n      dup2\n        /* \"src/farm/GenericStake.sol\":3667:3669  30 */\n      0x1e\n        /* \"src/farm/GenericStake.sol\":3659:3674  uint256(30).sub */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":3659:3695  uint256(30).sub(decimalsRewardToken) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"src/farm/GenericStake.sol\":3654:3656  10 */\n      0x0a\n        /* \"src/farm/GenericStake.sol\":3654:3696  10**(uint256(30).sub(decimalsRewardToken)) */\n      exp\n        /* \"src/farm/GenericStake.sol\":3627:3643  PRECISION_FACTOR */\n      0x0a\n        /* \"src/farm/GenericStake.sol\":3627:3697  PRECISION_FACTOR = uint256(10**(uint256(30).sub(decimalsRewardToken))) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3779:3789  startBlock */\n      sload(0x06)\n        /* \"src/farm/GenericStake.sol\":3761:3776  lastRewardBlock */\n      0x07\n        /* \"src/farm/GenericStake.sol\":3761:3789  lastRewardBlock = startBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":3885:3910  transferOwnership(_admin) */\n      tag_168\n        /* \"src/farm/GenericStake.sol\":3903:3909  _admin */\n      dup3\n        /* \"src/farm/GenericStake.sol\":3885:3902  transferOwnership */\n      tag_103\n        /* \"src/farm/GenericStake.sol\":3885:3910  transferOwnership(_admin) */\n      jump\t// in\n    tag_168:\n        /* \"src/farm/GenericStake.sol\":2713:3917  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":6117:6248  function availableRewards() public view returns (uint) {... */\n    tag_75:\n        /* \"src/farm/GenericStake.sol\":6166:6170  uint */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6228:6241  stakedByUsers */\n      sload(0x04)\n        /* \"src/farm/GenericStake.sol\":6189:6200  stakedToken */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":6189:6210  stakedToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/farm/GenericStake.sol\":6219:6223  this */\n      address\n        /* \"src/farm/GenericStake.sol\":6189:6225  stakedToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"src/farm/GenericStake.sol\":6189:6241  stakedToken.balanceOf(address(this)) - stakedByUsers */\n      sub\n        /* \"src/farm/GenericStake.sol\":6182:6241  return stakedToken.balanceOf(address(this)) - stakedByUsers */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":6117:6248  function availableRewards() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1268:1297  uint256 public rewardPerBlock */\n    tag_77:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1083:1160  function owner() public view returns (address) {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1121:1128  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1147:1153  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1140:1153  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1083:1160  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":841:872  uint256 public accTokenPerShare */\n    tag_81:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":714:738  bool public hasUserLimit */\n    tag_83:\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":9263:9947  function updateStartAndEndBlocks(... */\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_176\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"src/farm/GenericStake.sol\":9415:9425  startBlock */\n      sload(0x06)\n        /* \"src/farm/GenericStake.sol\":9400:9412  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":9400:9425  block.number < startBlock */\n      lt\n        /* \"src/farm/GenericStake.sol\":9392:9446  require(block.number < startBlock, \"Pool has started\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6f6c20686173207374617274656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"src/farm/GenericStake.sol\":9491:9505  _bonusEndBlock */\n      dup1\n        /* \"src/farm/GenericStake.sol\":9477:9488  _startBlock */\n      dup3\n        /* \"src/farm/GenericStake.sol\":9477:9505  _startBlock < _bonusEndBlock */\n      lt\n        /* \"src/farm/GenericStake.sol\":9456:9577  require(... */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"src/farm/GenericStake.sol\":9623:9634  _startBlock */\n      dup2\n        /* \"src/farm/GenericStake.sol\":9608:9620  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":9608:9634  block.number < _startBlock */\n      lt\n        /* \"src/farm/GenericStake.sol\":9587:9708  require(... */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"src/farm/GenericStake.sol\":9732:9743  _startBlock */\n      dup2\n        /* \"src/farm/GenericStake.sol\":9719:9729  startBlock */\n      0x06\n        /* \"src/farm/GenericStake.sol\":9719:9743  startBlock = _startBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":9769:9783  _bonusEndBlock */\n      dup1\n        /* \"src/farm/GenericStake.sol\":9753:9766  bonusEndBlock */\n      0x05\n        /* \"src/farm/GenericStake.sol\":9753:9783  bonusEndBlock = _bonusEndBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":9865:9875  startBlock */\n      sload(0x06)\n        /* \"src/farm/GenericStake.sol\":9847:9862  lastRewardBlock */\n      0x07\n        /* \"src/farm/GenericStake.sol\":9847:9875  lastRewardBlock = startBlock */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":9891:9940  NewStartAndEndBlocks(_startBlock, _bonusEndBlock) */\n      0x7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce06\n        /* \"src/farm/GenericStake.sol\":9912:9923  _startBlock */\n      dup3\n        /* \"src/farm/GenericStake.sol\":9925:9939  _bonusEndBlock */\n      dup3\n        /* \"src/farm/GenericStake.sol\":9891:9940  NewStartAndEndBlocks(_startBlock, _bonusEndBlock) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/farm/GenericStake.sol\":9263:9947  function updateStartAndEndBlocks(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":8174:8707  function updatePoolLimitPerUser(... */\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_183\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"src/farm/GenericStake.sol\":8312:8324  hasUserLimit */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/farm/GenericStake.sol\":8304:8340  require(hasUserLimit, \"Must be set\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4d75737420626520736574000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"src/farm/GenericStake.sol\":8354:8367  _hasUserLimit */\n      dup2\n        /* \"src/farm/GenericStake.sol\":8350:8656  if (_hasUserLimit) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"src/farm/GenericStake.sol\":8428:8444  poolLimitPerUser */\n      sload(0x08)\n        /* \"src/farm/GenericStake.sol\":8408:8425  _poolLimitPerUser */\n      dup2\n        /* \"src/farm/GenericStake.sol\":8408:8444  _poolLimitPerUser > poolLimitPerUser */\n      gt\n        /* \"src/farm/GenericStake.sol\":8383:8502  require(... */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6577206c696d6974206d757374206265206869676865720000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"src/farm/GenericStake.sol\":8535:8552  _poolLimitPerUser */\n      dup1\n        /* \"src/farm/GenericStake.sol\":8516:8532  poolLimitPerUser */\n      0x08\n        /* \"src/farm/GenericStake.sol\":8516:8552  poolLimitPerUser = _poolLimitPerUser */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":8350:8656  if (_hasUserLimit) {... */\n      jump(tag_189)\n    tag_187:\n        /* \"src/farm/GenericStake.sol\":8598:8611  _hasUserLimit */\n      dup2\n        /* \"src/farm/GenericStake.sol\":8583:8595  hasUserLimit */\n      0x02\n      0x14\n        /* \"src/farm/GenericStake.sol\":8583:8611  hasUserLimit = _hasUserLimit */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":8644:8645  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":8625:8641  poolLimitPerUser */\n      0x08\n        /* \"src/farm/GenericStake.sol\":8625:8645  poolLimitPerUser = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":8350:8656  if (_hasUserLimit) {... */\n    tag_189:\n        /* \"src/farm/GenericStake.sol\":8670:8700  NewPoolLimit(poolLimitPerUser) */\n      0x241f67ee5f41b7a5cabf911367329be7215900f602ebfc47f89dce2a6bcd847c\n        /* \"src/farm/GenericStake.sol\":8683:8699  poolLimitPerUser */\n      sload(0x08)\n        /* \"src/farm/GenericStake.sol\":8670:8700  NewPoolLimit(poolLimitPerUser) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/farm/GenericStake.sol\":8174:8707  function updatePoolLimitPerUser(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1122:1152  uint256 public lastRewardBlock */\n    tag_91:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":4069:5147  function deposit(uint256 _amount) external nonReentrant {... */\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2407:2414  _status */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":4135:4156  UserInfo storage user */\n      0x00\n        /* \"src/farm/GenericStake.sol\":4159:4167  userInfo */\n      0x0d\n        /* \"src/farm/GenericStake.sol\":4159:4179  userInfo[msg.sender] */\n      0x00\n        /* \"src/farm/GenericStake.sol\":4168:4178  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":4159:4179  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/farm/GenericStake.sol\":4135:4179  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":4194:4206  hasUserLimit */\n      0x02\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/farm/GenericStake.sol\":4190:4359  if (hasUserLimit) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"src/farm/GenericStake.sol\":4275:4291  poolLimitPerUser */\n      sload(0x08)\n        /* \"src/farm/GenericStake.sol\":4247:4271  _amount.add(user.amount) */\n      tag_194\n        /* \"src/farm/GenericStake.sol\":4259:4263  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":4259:4270  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":4247:4254  _amount */\n      dup5\n        /* \"src/farm/GenericStake.sol\":4247:4258  _amount.add */\n      tag_195\n      swap1\n        /* \"src/farm/GenericStake.sol\":4247:4271  _amount.add(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"src/farm/GenericStake.sol\":4247:4291  _amount.add(user.amount) <= poolLimitPerUser */\n      gt\n      iszero\n        /* \"src/farm/GenericStake.sol\":4222:4348  require(... */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5573657220616d6f756e742061626f7665206c696d6974000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"src/farm/GenericStake.sol\":4190:4359  if (hasUserLimit) {... */\n    tag_193:\n        /* \"src/farm/GenericStake.sol\":4385:4392  _amount */\n      dup2\n        /* \"src/farm/GenericStake.sol\":4368:4381  stakedByUsers */\n      0x04\n      0x00\n        /* \"src/farm/GenericStake.sol\":4368:4392  stakedByUsers += _amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":4403:4416  _updatePool() */\n      tag_197\n        /* \"src/farm/GenericStake.sol\":4403:4414  _updatePool */\n      tag_122\n        /* \"src/farm/GenericStake.sol\":4403:4416  _updatePool() */\n      jump\t// in\n    tag_197:\n        /* \"src/farm/GenericStake.sol\":4445:4446  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":4431:4435  user */\n      dup2\n        /* \"src/farm/GenericStake.sol\":4431:4442  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":4431:4446  user.amount > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":4427:4752  if (user.amount > 0) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"src/farm/GenericStake.sol\":4462:4477  uint256 pending */\n      0x00\n        /* \"src/farm/GenericStake.sol\":4480:4624  user... */\n      tag_199\n        /* \"src/farm/GenericStake.sol\":4608:4612  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":4608:4623  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":4480:4586  user... */\n      tag_200\n        /* \"src/farm/GenericStake.sol\":4569:4585  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":4480:4547  user... */\n      tag_201\n        /* \"src/farm/GenericStake.sol\":4530:4546  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":4480:4484  user */\n      dup8\n        /* \"src/farm/GenericStake.sol\":4480:4508  user... */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":4480:4529  user... */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":4480:4547  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"src/farm/GenericStake.sol\":4480:4568  user... */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":4480:4586  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"src/farm/GenericStake.sol\":4480:4607  user... */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":4480:4624  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"src/farm/GenericStake.sol\":4462:4624  uint256 pending = user... */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":4652:4653  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":4642:4649  pending */\n      dup2\n        /* \"src/farm/GenericStake.sol\":4642:4653  pending > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":4638:4742  if (pending > 0) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"src/farm/GenericStake.sol\":4673:4727  rewardToken.safeTransfer(address(msg.sender), pending) */\n      tag_203\n        /* \"src/farm/GenericStake.sol\":4706:4716  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":4719:4726  pending */\n      dup3\n        /* \"src/farm/GenericStake.sol\":4673:4684  rewardToken */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":4673:4697  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"src/farm/GenericStake.sol\":4673:4727  rewardToken.safeTransfer(address(msg.sender), pending) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"src/farm/GenericStake.sol\":4638:4742  if (pending > 0) {... */\n    tag_202:\n        /* \"src/farm/GenericStake.sol\":4427:4752  if (user.amount > 0) {... */\n      pop\n    tag_198:\n        /* \"src/farm/GenericStake.sol\":4776:4777  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":4766:4773  _amount */\n      dup3\n        /* \"src/farm/GenericStake.sol\":4766:4777  _amount > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":4762:4991  if (_amount > 0) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"src/farm/GenericStake.sol\":4807:4831  user.amount.add(_amount) */\n      tag_205\n        /* \"src/farm/GenericStake.sol\":4823:4830  _amount */\n      dup3\n        /* \"src/farm/GenericStake.sol\":4807:4811  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":4807:4818  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":4807:4822  user.amount.add */\n      tag_195\n      swap1\n        /* \"src/farm/GenericStake.sol\":4807:4831  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"src/farm/GenericStake.sol\":4793:4797  user */\n      dup2\n        /* \"src/farm/GenericStake.sol\":4793:4804  user.amount */\n      0x00\n      add\n        /* \"src/farm/GenericStake.sol\":4793:4831  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":4845:4980  stakedToken.safeTransferFrom(... */\n      tag_206\n        /* \"src/farm/GenericStake.sol\":4899:4909  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":4936:4940  this */\n      address\n        /* \"src/farm/GenericStake.sol\":4959:4966  _amount */\n      dup5\n        /* \"src/farm/GenericStake.sol\":4845:4856  stakedToken */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":4845:4873  stakedToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_207\n      swap1\n        /* \"src/farm/GenericStake.sol\":4845:4980  stakedToken.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"src/farm/GenericStake.sol\":4762:4991  if (_amount > 0) {... */\n    tag_204:\n        /* \"src/farm/GenericStake.sol\":5019:5096  user.amount.mul(accTokenPerShare).div(... */\n      tag_208\n        /* \"src/farm/GenericStake.sol\":5070:5086  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":5019:5052  user.amount.mul(accTokenPerShare) */\n      tag_209\n        /* \"src/farm/GenericStake.sol\":5035:5051  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":5019:5023  user */\n      dup5\n        /* \"src/farm/GenericStake.sol\":5019:5030  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":5019:5034  user.amount.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":5019:5052  user.amount.mul(accTokenPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"src/farm/GenericStake.sol\":5019:5056  user.amount.mul(accTokenPerShare).div */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":5019:5096  user.amount.mul(accTokenPerShare).div(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"src/farm/GenericStake.sol\":5001:5005  user */\n      dup2\n        /* \"src/farm/GenericStake.sol\":5001:5016  user.rewardDebt */\n      0x01\n      add\n        /* \"src/farm/GenericStake.sol\":5001:5096  user.rewardDebt = user.amount.mul(accTokenPerShare).div(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":5120:5130  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":5112:5140  Deposit(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"src/farm/GenericStake.sol\":5132:5139  _amount */\n      dup4\n        /* \"src/farm/GenericStake.sol\":5112:5140  Deposit(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2436:2437  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":4069:5147  function deposit(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1450:1475  IBEP20 public stakedToken */\n    tag_96:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1332:1363  uint256 public PRECISION_FACTOR */\n    tag_98:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":6383:6826  function emergencyWithdraw() external nonReentrant {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2407:2414  _status */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":6444:6465  UserInfo storage user */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6468:6476  userInfo */\n      0x0d\n        /* \"src/farm/GenericStake.sol\":6468:6488  userInfo[msg.sender] */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6477:6487  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":6468:6488  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/farm/GenericStake.sol\":6444:6488  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":6498:6522  uint256 amountToTransfer */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6525:6529  user */\n      dup2\n        /* \"src/farm/GenericStake.sol\":6525:6536  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":6498:6536  uint256 amountToTransfer = user.amount */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":6560:6561  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6546:6550  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":6546:6557  user.amount */\n      0x00\n      add\n        /* \"src/farm/GenericStake.sol\":6546:6561  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":6589:6590  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6571:6575  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":6571:6586  user.rewardDebt */\n      0x01\n      add\n        /* \"src/farm/GenericStake.sol\":6571:6590  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":6624:6625  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":6605:6621  amountToTransfer */\n      dup2\n        /* \"src/farm/GenericStake.sol\":6605:6625  amountToTransfer > 0 */\n      gt\n        /* \"src/farm/GenericStake.sol\":6601:6762  if (amountToTransfer > 0) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"src/farm/GenericStake.sol\":6641:6704  stakedToken.safeTransfer(address(msg.sender), amountToTransfer) */\n      tag_214\n        /* \"src/farm/GenericStake.sol\":6674:6684  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":6687:6703  amountToTransfer */\n      dup3\n        /* \"src/farm/GenericStake.sol\":6641:6652  stakedToken */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/farm/GenericStake.sol\":6641:6665  stakedToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"src/farm/GenericStake.sol\":6641:6704  stakedToken.safeTransfer(address(msg.sender), amountToTransfer) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"src/farm/GenericStake.sol\":6735:6751  amountToTransfer */\n      dup1\n        /* \"src/farm/GenericStake.sol\":6718:6731  stakedByUsers */\n      0x04\n      0x00\n        /* \"src/farm/GenericStake.sol\":6718:6751  stakedByUsers -= amountToTransfer */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":6601:6762  if (amountToTransfer > 0) {... */\n    tag_213:\n        /* \"src/farm/GenericStake.sol\":6795:6805  msg.sender */\n      caller\n        /* \"src/farm/GenericStake.sol\":6777:6819  EmergencyWithdraw(msg.sender, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"src/farm/GenericStake.sol\":6807:6811  user */\n      dup4\n        /* \"src/farm/GenericStake.sol\":6807:6818  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":6777:6819  EmergencyWithdraw(msg.sender, user.amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2436:2437  _ */\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2580:2587  _status */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":6383:6826  function emergencyWithdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2000:2240  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1307  _msgSender */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1297:1309  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1293  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1287:1309  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":1279:1346  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2108:2109  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2088:2110  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2088:2096  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2088:2110  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2080:2153  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2197:2205  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2168:2206  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2189:2195  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2168:2206  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2225:2233  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2216:2222  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2216:2233  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":2000:2240  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":878:906  uint256 public stakedByUsers */\n    tag_105:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":10113:11046  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_108:\n        /* \"src/farm/GenericStake.sol\":10174:10181  uint256 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10193:10214  UserInfo storage user */\n      dup1\n        /* \"src/farm/GenericStake.sol\":10217:10225  userInfo */\n      0x0d\n        /* \"src/farm/GenericStake.sol\":10217:10232  userInfo[_user] */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10226:10231  _user */\n      dup5\n        /* \"src/farm/GenericStake.sol\":10217:10232  userInfo[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/farm/GenericStake.sol\":10193:10232  UserInfo storage user = userInfo[_user] */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":10242:10267  uint256 stakedTokenSupply */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10270:10283  stakedByUsers */\n      sload(0x04)\n        /* \"src/farm/GenericStake.sol\":10242:10283  uint256 stakedTokenSupply = stakedByUsers */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":10312:10327  lastRewardBlock */\n      sload(0x07)\n        /* \"src/farm/GenericStake.sol\":10297:10309  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":10297:10327  block.number > lastRewardBlock */\n      gt\n        /* \"src/farm/GenericStake.sol\":10297:10353  block.number > lastRewardBlock && stakedTokenSupply != 0 */\n      dup1\n      iszero\n      tag_221\n      jumpi\n      pop\n        /* \"src/farm/GenericStake.sol\":10352:10353  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10331:10348  stakedTokenSupply */\n      dup2\n        /* \"src/farm/GenericStake.sol\":10331:10353  stakedTokenSupply != 0 */\n      eq\n      iszero\n        /* \"src/farm/GenericStake.sol\":10297:10353  block.number > lastRewardBlock && stakedTokenSupply != 0 */\n    tag_221:\n        /* \"src/farm/GenericStake.sol\":10293:11040  if (block.number > lastRewardBlock && stakedTokenSupply != 0) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"src/farm/GenericStake.sol\":10369:10387  uint256 multiplier */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10390:10435  _getMultiplier(lastRewardBlock, block.number) */\n      tag_223\n        /* \"src/farm/GenericStake.sol\":10405:10420  lastRewardBlock */\n      sload(0x07)\n        /* \"src/farm/GenericStake.sol\":10422:10434  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":10390:10404  _getMultiplier */\n      tag_224\n        /* \"src/farm/GenericStake.sol\":10390:10435  _getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_223:\n        /* \"src/farm/GenericStake.sol\":10369:10435  uint256 multiplier = _getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":10449:10470  uint256 wakandaReward */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10473:10503  multiplier.mul(rewardPerBlock) */\n      tag_225\n        /* \"src/farm/GenericStake.sol\":10488:10502  rewardPerBlock */\n      sload(0x09)\n        /* \"src/farm/GenericStake.sol\":10473:10483  multiplier */\n      dup4\n        /* \"src/farm/GenericStake.sol\":10473:10487  multiplier.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":10473:10503  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"src/farm/GenericStake.sol\":10449:10503  uint256 wakandaReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":10517:10546  uint256 adjustedTokenPerShare */\n      0x00\n        /* \"src/farm/GenericStake.sol\":10549:10659  accTokenPerShare.add(... */\n      tag_226\n        /* \"src/farm/GenericStake.sol\":10587:10645  wakandaReward.mul(PRECISION_FACTOR).div(stakedTokenSupply) */\n      tag_227\n        /* \"src/farm/GenericStake.sol\":10627:10644  stakedTokenSupply */\n      dup6\n        /* \"src/farm/GenericStake.sol\":10587:10622  wakandaReward.mul(PRECISION_FACTOR) */\n      tag_228\n        /* \"src/farm/GenericStake.sol\":10605:10621  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":10587:10600  wakandaReward */\n      dup7\n        /* \"src/farm/GenericStake.sol\":10587:10604  wakandaReward.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":10587:10622  wakandaReward.mul(PRECISION_FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"src/farm/GenericStake.sol\":10587:10626  wakandaReward.mul(PRECISION_FACTOR).div */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":10587:10645  wakandaReward.mul(PRECISION_FACTOR).div(stakedTokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"src/farm/GenericStake.sol\":10549:10565  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":10549:10569  accTokenPerShare.add */\n      tag_195\n      swap1\n        /* \"src/farm/GenericStake.sol\":10549:10659  accTokenPerShare.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"src/farm/GenericStake.sol\":10517:10659  uint256 adjustedTokenPerShare = accTokenPerShare.add(... */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":10696:10861  user... */\n      tag_229\n        /* \"src/farm/GenericStake.sol\":10845:10849  user */\n      dup6\n        /* \"src/farm/GenericStake.sol\":10845:10860  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":10696:10819  user... */\n      tag_230\n        /* \"src/farm/GenericStake.sol\":10802:10818  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":10696:10776  user... */\n      tag_231\n        /* \"src/farm/GenericStake.sol\":10754:10775  adjustedTokenPerShare */\n      dup6\n        /* \"src/farm/GenericStake.sol\":10696:10700  user */\n      dup11\n        /* \"src/farm/GenericStake.sol\":10696:10728  user... */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":10696:10753  user... */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":10696:10776  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"src/farm/GenericStake.sol\":10696:10801  user... */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":10696:10819  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"src/farm/GenericStake.sol\":10696:10844  user... */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":10696:10861  user... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"src/farm/GenericStake.sol\":10673:10861  return... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_220)\n        /* \"src/farm/GenericStake.sol\":10293:11040  if (block.number > lastRewardBlock && stakedTokenSupply != 0) {... */\n    tag_222:\n        /* \"src/farm/GenericStake.sol\":10915:11029  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(... */\n      tag_233\n        /* \"src/farm/GenericStake.sol\":10996:11000  user */\n      dup3\n        /* \"src/farm/GenericStake.sol\":10996:11011  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":10915:10970  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      tag_234\n        /* \"src/farm/GenericStake.sol\":10953:10969  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":10915:10948  user.amount.mul(accTokenPerShare) */\n      tag_235\n        /* \"src/farm/GenericStake.sol\":10931:10947  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":10915:10919  user */\n      dup8\n        /* \"src/farm/GenericStake.sol\":10915:10926  user.amount */\n      0x00\n      add\n      sload\n        /* \"src/farm/GenericStake.sol\":10915:10930  user.amount.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":10915:10948  user.amount.mul(accTokenPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"src/farm/GenericStake.sol\":10915:10952  user.amount.mul(accTokenPerShare).div */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":10915:10970  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"src/farm/GenericStake.sol\":10915:10974  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":10915:11029  user.amount.mul(accTokenPerShare).div(PRECISION_FACTOR).sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"src/farm/GenericStake.sol\":10892:11029  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/farm/GenericStake.sol\":10113:11046  function pendingReward(address _user) external view returns (uint256) {... */\n    tag_220:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":1394:1419  IBEP20 public rewardToken */\n    tag_110:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_113:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":651:666  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":11142:11735  function _updatePool() internal {... */\n    tag_122:\n        /* \"src/farm/GenericStake.sol\":11204:11219  lastRewardBlock */\n      sload(0x07)\n        /* \"src/farm/GenericStake.sol\":11188:11200  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":11188:11219  block.number <= lastRewardBlock */\n      gt\n        /* \"src/farm/GenericStake.sol\":11184:11252  if (block.number <= lastRewardBlock) {... */\n      tag_238\n      jumpi\n        /* \"src/farm/GenericStake.sol\":11235:11242  return; */\n      jump(tag_237)\n        /* \"src/farm/GenericStake.sol\":11184:11252  if (block.number <= lastRewardBlock) {... */\n    tag_238:\n        /* \"src/farm/GenericStake.sol\":11262:11287  uint256 stakedTokenSupply */\n      0x00\n        /* \"src/farm/GenericStake.sol\":11290:11303  stakedByUsers */\n      sload(0x04)\n        /* \"src/farm/GenericStake.sol\":11262:11303  uint256 stakedTokenSupply = stakedByUsers */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":11339:11340  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":11318:11335  stakedTokenSupply */\n      dup2\n        /* \"src/farm/GenericStake.sol\":11318:11340  stakedTokenSupply == 0 */\n      eq\n        /* \"src/farm/GenericStake.sol\":11314:11417  if (stakedTokenSupply == 0) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"src/farm/GenericStake.sol\":11374:11386  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":11356:11371  lastRewardBlock */\n      0x07\n        /* \"src/farm/GenericStake.sol\":11356:11386  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":11400:11407  return; */\n      pop\n      jump(tag_237)\n        /* \"src/farm/GenericStake.sol\":11314:11417  if (stakedTokenSupply == 0) {... */\n    tag_239:\n        /* \"src/farm/GenericStake.sol\":11427:11445  uint256 multiplier */\n      0x00\n        /* \"src/farm/GenericStake.sol\":11448:11493  _getMultiplier(lastRewardBlock, block.number) */\n      tag_240\n        /* \"src/farm/GenericStake.sol\":11463:11478  lastRewardBlock */\n      sload(0x07)\n        /* \"src/farm/GenericStake.sol\":11480:11492  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":11448:11462  _getMultiplier */\n      tag_224\n        /* \"src/farm/GenericStake.sol\":11448:11493  _getMultiplier(lastRewardBlock, block.number) */\n      jump\t// in\n    tag_240:\n        /* \"src/farm/GenericStake.sol\":11427:11493  uint256 multiplier = _getMultiplier(lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":11503:11524  uint256 wakandaReward */\n      0x00\n        /* \"src/farm/GenericStake.sol\":11527:11557  multiplier.mul(rewardPerBlock) */\n      tag_241\n        /* \"src/farm/GenericStake.sol\":11542:11556  rewardPerBlock */\n      sload(0x09)\n        /* \"src/farm/GenericStake.sol\":11527:11537  multiplier */\n      dup4\n        /* \"src/farm/GenericStake.sol\":11527:11541  multiplier.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":11527:11557  multiplier.mul(rewardPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"src/farm/GenericStake.sol\":11503:11557  uint256 wakandaReward = multiplier.mul(rewardPerBlock) */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":11586:11688  accTokenPerShare.add(... */\n      tag_242\n        /* \"src/farm/GenericStake.sol\":11620:11678  wakandaReward.mul(PRECISION_FACTOR).div(stakedTokenSupply) */\n      tag_243\n        /* \"src/farm/GenericStake.sol\":11660:11677  stakedTokenSupply */\n      dup5\n        /* \"src/farm/GenericStake.sol\":11620:11655  wakandaReward.mul(PRECISION_FACTOR) */\n      tag_244\n        /* \"src/farm/GenericStake.sol\":11638:11654  PRECISION_FACTOR */\n      sload(0x0a)\n        /* \"src/farm/GenericStake.sol\":11620:11633  wakandaReward */\n      dup6\n        /* \"src/farm/GenericStake.sol\":11620:11637  wakandaReward.mul */\n      tag_126\n      swap1\n        /* \"src/farm/GenericStake.sol\":11620:11655  wakandaReward.mul(PRECISION_FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"src/farm/GenericStake.sol\":11620:11659  wakandaReward.mul(PRECISION_FACTOR).div */\n      tag_127\n      swap1\n        /* \"src/farm/GenericStake.sol\":11620:11678  wakandaReward.mul(PRECISION_FACTOR).div(stakedTokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"src/farm/GenericStake.sol\":11586:11602  accTokenPerShare */\n      sload(0x03)\n        /* \"src/farm/GenericStake.sol\":11586:11606  accTokenPerShare.add */\n      tag_195\n      swap1\n        /* \"src/farm/GenericStake.sol\":11586:11688  accTokenPerShare.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"src/farm/GenericStake.sol\":11567:11583  accTokenPerShare */\n      0x03\n        /* \"src/farm/GenericStake.sol\":11567:11688  accTokenPerShare = accTokenPerShare.add(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":11716:11728  block.number */\n      number\n        /* \"src/farm/GenericStake.sol\":11698:11713  lastRewardBlock */\n      0x07\n        /* \"src/farm/GenericStake.sol\":11698:11728  lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/farm/GenericStake.sol\":11142:11735  function _updatePool() internal {... */\n      pop\n      pop\n      pop\n    tag_237:\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2188:2647  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2246:2253  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2492:2493  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2487:2488  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2487:2493  a == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2483:2528  if (a == 0) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2516:2517  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2509:2517  return 0 */\n      swap1\n      pop\n      jump(tag_245)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2483:2528  if (a == 0) {... */\n    tag_246:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2538:2547  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2554:2555  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2550:2551  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2550:2555  a * b */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2538:2555  uint256 c = a * b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2582:2583  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2577:2578  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2573:2574  c */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2573:2578  c / a */\n      dup2\n      tag_247\n      jumpi\n      invalid\n    tag_247:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2573:2583  c / a == b */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2565:2621  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2639:2640  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2632:2640  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":2188:2647  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_245:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3109:3239  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3167:3174  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3193:3232  div(a, b, \"SafeMath: division by zero\") */\n      tag_250\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3197:3198  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3200:3201  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3193:3232  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3193:3196  div */\n      tag_251\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3193:3232  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_250:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3186:3232  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3109:3239  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1329:1463  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1387:1394  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1413:1456  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1417:1418  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1420:1421  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1413:1456  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1413:1416  sub */\n      tag_254\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1413:1456  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1406:1456  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1329:1463  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/helpers/SafeBEP20.sol\":837:1076  function safeTransfer(... */\n    tag_132:\n        /* \"src/helpers/SafeBEP20.sol\":949:1069  _callOptionalReturn(... */\n      tag_256\n        /* \"src/helpers/SafeBEP20.sol\":982:987  token */\n      dup4\n        /* \"src/helpers/SafeBEP20.sol\":1024:1047  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"src/helpers/SafeBEP20.sol\":1049:1051  to */\n      dup5\n        /* \"src/helpers/SafeBEP20.sol\":1053:1058  value */\n      dup5\n        /* \"src/helpers/SafeBEP20.sol\":1001:1059  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/helpers/SafeBEP20.sol\":949:968  _callOptionalReturn */\n      tag_257\n        /* \"src/helpers/SafeBEP20.sol\":949:1069  _callOptionalReturn(... */\n      jump\t// in\n    tag_256:\n        /* \"src/helpers/SafeBEP20.sol\":837:1076  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":882:1058  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":940:947  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":959:968  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":975:976  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":971:972  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":971:976  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":959:976  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":999:1000  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":994:995  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":994:1000  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":986:1032  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1050:1051  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1043:1051  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":882:1058  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/helpers/SafeBEP20.sol\":1082:1357  function safeTransferFrom(... */\n    tag_207:\n        /* \"src/helpers/SafeBEP20.sol\":1220:1350  _callOptionalReturn(... */\n      tag_261\n        /* \"src/helpers/SafeBEP20.sol\":1253:1258  token */\n      dup5\n        /* \"src/helpers/SafeBEP20.sol\":1295:1322  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"src/helpers/SafeBEP20.sol\":1324:1328  from */\n      dup6\n        /* \"src/helpers/SafeBEP20.sol\":1330:1332  to */\n      dup6\n        /* \"src/helpers/SafeBEP20.sol\":1334:1339  value */\n      dup6\n        /* \"src/helpers/SafeBEP20.sol\":1272:1340  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/helpers/SafeBEP20.sol\":1220:1239  _callOptionalReturn */\n      tag_257\n        /* \"src/helpers/SafeBEP20.sol\":1220:1350  _callOptionalReturn(... */\n      jump\t// in\n    tag_261:\n        /* \"src/helpers/SafeBEP20.sol\":1082:1357  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/farm/GenericStake.sol\":11902:12231  function _getMultiplier(uint256 _from, uint256 _to)... */\n    tag_224:\n        /* \"src/farm/GenericStake.sol\":12001:12008  uint256 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":12035:12048  bonusEndBlock */\n      sload(0x05)\n        /* \"src/farm/GenericStake.sol\":12028:12031  _to */\n      dup3\n        /* \"src/farm/GenericStake.sol\":12028:12048  _to <= bonusEndBlock */\n      gt\n        /* \"src/farm/GenericStake.sol\":12024:12225  if (_to <= bonusEndBlock) {... */\n      tag_263\n      jumpi\n        /* \"src/farm/GenericStake.sol\":12071:12085  _to.sub(_from) */\n      tag_264\n        /* \"src/farm/GenericStake.sol\":12079:12084  _from */\n      dup4\n        /* \"src/farm/GenericStake.sol\":12071:12074  _to */\n      dup4\n        /* \"src/farm/GenericStake.sol\":12071:12078  _to.sub */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":12071:12085  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"src/farm/GenericStake.sol\":12064:12085  return _to.sub(_from) */\n      swap1\n      pop\n      jump(tag_262)\n        /* \"src/farm/GenericStake.sol\":12024:12225  if (_to <= bonusEndBlock) {... */\n    tag_263:\n        /* \"src/farm/GenericStake.sol\":12115:12128  bonusEndBlock */\n      sload(0x05)\n        /* \"src/farm/GenericStake.sol\":12106:12111  _from */\n      dup4\n        /* \"src/farm/GenericStake.sol\":12106:12128  _from >= bonusEndBlock */\n      lt\n        /* \"src/farm/GenericStake.sol\":12102:12225  if (_from >= bonusEndBlock) {... */\n      tag_266\n      jumpi\n        /* \"src/farm/GenericStake.sol\":12151:12152  0 */\n      0x00\n        /* \"src/farm/GenericStake.sol\":12144:12152  return 0 */\n      swap1\n      pop\n      jump(tag_262)\n        /* \"src/farm/GenericStake.sol\":12102:12225  if (_from >= bonusEndBlock) {... */\n    tag_266:\n        /* \"src/farm/GenericStake.sol\":12190:12214  bonusEndBlock.sub(_from) */\n      tag_268\n        /* \"src/farm/GenericStake.sol\":12208:12213  _from */\n      dup4\n        /* \"src/farm/GenericStake.sol\":12190:12203  bonusEndBlock */\n      sload(0x05)\n        /* \"src/farm/GenericStake.sol\":12190:12207  bonusEndBlock.sub */\n      tag_128\n      swap1\n        /* \"src/farm/GenericStake.sol\":12190:12214  bonusEndBlock.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"src/farm/GenericStake.sol\":12183:12214  return bonusEndBlock.sub(_from) */\n      swap1\n      pop\n        /* \"src/farm/GenericStake.sol\":11902:12231  function _getMultiplier(uint256 _from, uint256 _to)... */\n    tag_262:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3721:3993  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3807:3814  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3838:3839  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3834:3835  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3834:3839  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3841:3853  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3826:3854  require(b > 0, errorMessage) */\n      swap1\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_271:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_273\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_271)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_274\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_274:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3864:3873  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3880:3881  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3876:3877  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3876:3881  a / b */\n      dup2\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3864:3881  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3985:3986  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3978:3986  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":3721:3993  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1754:1941  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_254:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1840:1847  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1872:1873  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1867:1868  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1867:1873  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1875:1887  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1859:1888  require(b <= a, errorMessage) */\n      swap1\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_278:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_280\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_278)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_281\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_281:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1898:1907  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1914:1915  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1910:1911  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1910:1915  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1898:1915  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1933:1934  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1926:1934  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":1754:1941  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/helpers/SafeBEP20.sol\":3564:4407  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n    tag_257:\n        /* \"src/helpers/SafeBEP20.sol\":3983:4006  bytes memory returndata */\n      0x60\n        /* \"src/helpers/SafeBEP20.sol\":4009:4112  address(token).functionCall(... */\n      tag_283\n        /* \"src/helpers/SafeBEP20.sol\":4050:4054  data */\n      dup3\n        /* \"src/helpers/SafeBEP20.sol\":4009:4112  address(token).functionCall(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"src/helpers/SafeBEP20.sol\":4017:4022  token */\n      dup6\n        /* \"src/helpers/SafeBEP20.sol\":4009:4036  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_284\n      swap1\n        /* \"src/helpers/SafeBEP20.sol\":4009:4112  address(token).functionCall(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"src/helpers/SafeBEP20.sol\":3983:4112  bytes memory returndata = address(token).functionCall(... */\n      swap1\n      pop\n        /* \"src/helpers/SafeBEP20.sol\":4146:4147  0 */\n      0x00\n        /* \"src/helpers/SafeBEP20.sol\":4126:4136  returndata */\n      dup2\n        /* \"src/helpers/SafeBEP20.sol\":4126:4143  returndata.length */\n      mload\n        /* \"src/helpers/SafeBEP20.sol\":4126:4147  returndata.length > 0 */\n      gt\n        /* \"src/helpers/SafeBEP20.sol\":4122:4401  if (returndata.length > 0) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"src/helpers/SafeBEP20.sol\":4295:4305  returndata */\n      dup1\n        /* \"src/helpers/SafeBEP20.sol\":4284:4314  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"src/helpers/SafeBEP20.sol\":4259:4390  require(... */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"src/helpers/SafeBEP20.sol\":4122:4401  if (returndata.length > 0) {... */\n    tag_285:\n        /* \"src/helpers/SafeBEP20.sol\":3564:4407  function _callOptionalReturn(IBEP20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_289\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_290\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_289:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_290:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_293\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_294\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_293:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5022:5033  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_296:\n      0x20\n      dup4\n      lt\n      tag_298\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_296)\n    tag_298:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_301\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_300)\n    tag_301:\n      0x60\n      swap2\n      pop\n    tag_300:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_302\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_303\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_302:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_294:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":786:790  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":989:1001  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1098:1105  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1078:1106  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1131:1132  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1124:1128  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":1117:1132  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6111:6836  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_303:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6226:6238  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6254:6261  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6250:6830  if (success) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6284:6294  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6277:6294  return returndata */\n      swap1\n      pop\n      jump(tag_305)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6250:6830  if (success) {... */\n    tag_306:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6415:6416  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6395:6405  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6395:6412  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6395:6416  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6391:6820  if (returndata.length > 0) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6653:6663  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6647:6664  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6713:6728  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6700:6710  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6696:6698  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6692:6711  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6685:6729  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6602:6747  {... */\n    tag_308:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6792:6804  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6785:6805  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_310:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_312\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_310)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_313\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_313:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":6111:6836  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_305:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082 5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0 4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e 4e6577207374617274426c6f636b206d75737420626520686967686572207468616e2063757272656e7420626c6f636b\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa26469706673582212206868eda0ccd5ed1a68341a59ebe18e8d972df73b3933f4271ea30e48a772b54e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600061002161010c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506001808190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610114565b600033905090565b612d5f80620001246000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638ae39cac11610104578063b6b55f25116100a2578063f2fde38b11610071578063f2fde38b1461066a578063f36cc893146106ae578063f40f0f52146106cc578063f7c618c114610724576101da565b8063b6b55f25146105e0578063cc7a262e1461060e578063ccd34cd514610642578063db2e21bc14610660576101da565b806392e8990e116100de57806392e8990e146105305780639513997f14610550578063a0b4090514610588578063a9f8d181146105c2576101da565b80638ae39cac146104c05780638da5cb5b146104de5780638f66291514610512576101da565b80633f138d4b1161017c578063715018a61161014b578063715018a6146103e257806380dc0672146103ec57806383a5041c146103f6578063879d9090146104a2576101da565b80633f138d4b1461032457806348cd4cb114610372578063514f4a421461039057806366fe9f8a146103c4576101da565b80632de68155116101b85780632de681551461028a5780632e1a7d4d146102a85780633279beab146102d6578063392e53cd14610304576101da565b806301f8a976146101df5780631959a0021461020d5780631aed65531461026c575b600080fd5b61020b600480360360208110156101f557600080fd5b8101908080359060200190929190505050610758565b005b61024f6004803603602081101561022357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610861565b604051808381526020018281526020019250505060405180910390f35b610274610885565b6040518082815260200191505060405180910390f35b61029261088b565b6040518082815260200191505060405180910390f35b6102d4600480360360208110156102be57600080fd5b8101908080359060200190929190505050610895565b005b610302600480360360208110156102ec57600080fd5b8101908080359060200190929190505050610b8e565b005b61030c610cba565b60405180821515815260200191505060405180910390f35b6103706004803603604081101561033a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ccd565b005b61037a610edd565b6040518082815260200191505060405180910390f35b610398610ee3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103cc610f09565b6040518082815260200191505060405180910390f35b6103ea610f0f565b005b6103f4611095565b005b6104a0600480360360e081101561040c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611166565b005b6104aa6114e3565b6040518082815260200191505060405180910390f35b6104c86115b2565b6040518082815260200191505060405180910390f35b6104e66115b8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051a6115e1565b6040518082815260200191505060405180910390f35b6105386115e7565b60405180821515815260200191505060405180910390f35b6105866004803603604081101561056657600080fd5b8101908080359060200190929190803590602001909291905050506115fa565b005b6105c06004803603604081101561059e57600080fd5b8101908080351515906020019092919080359060200190929190505050611843565b005b6105ca611a76565b6040518082815260200191505060405180910390f35b61060c600480360360208110156105f657600080fd5b8101908080359060200190929190505050611a7c565b005b610616611daf565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61064a611dd5565b6040518082815260200191505060405180910390f35b610668611ddb565b005b6106ac6004803603602081101561068057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f80565b005b6106b661218b565b6040518082815260200191505060405180910390f35b61070e600480360360208110156106e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612191565b6040518082815260200191505060405180910390f35b61072c6122f5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61076061231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806009819055507f0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df816040518082815260200191505060405180910390a150565b600d6020528060005260406000206000915090508060000154908060010154905082565b60055481565b6000600454905090565b6002600154141561090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026001819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000015410156109d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f416d6f756e7420746f20776974686472617720746f6f2068696768000000000081525060200191505060405180910390fd5b816004600082825403925050819055506109eb612323565b6000610a308260010154610a22600a54610a1460035487600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b90506000831115610aa857610a5283836000015461249590919063ffffffff16565b8260000181905550610aa73384600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b5b6000811115610aff57610afe3382600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b5b610b2c600a54610b1e60035485600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364846040518082815260200191505060405180910390a250506001808190555050565b610b9661231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c5e6114e3565b811115610c6a57600080fd5b610cb73382600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b50565b600260159054906101000a900460ff1681565b610cd561231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e6e6f74206265207374616b656420746f6b656e0000000000000000000081525060200191505060405180910390fd5b610e8433828473ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b7f74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab781298282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b610f1761231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fd7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61109d61231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461115d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b43600581905550565b600260159054906101000a900460ff16156111e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f416c726561647920696e697469616c697a65640000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f7420666163746f727900000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600260156101000a81548160ff02191690831515021790555086600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846009819055508360068190555082600581905550600082111561138a576001600260146101000a81548160ff021916908315150217905550816008819055505b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156113f457600080fd5b505afa158015611408573d6000803e3d6000fd5b505050506040513d602081101561141e57600080fd5b810190808051906020019092919050505060ff169050601e81106114aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d75737420626520696e666572696f7220746f2033300000000000000000000081525060200191505060405180910390fd5b6114be81601e61249590919063ffffffff16565b600a0a600a819055506006546007819055506114d982611f80565b5050505050505050565b6000600454600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561157157600080fd5b505afa158015611585573d6000803e3d6000fd5b505050506040513d602081101561159b57600080fd5b810190808051906020019092919050505003905090565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600260149054906101000a900460ff1681565b61160261231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6006544310611739576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f506f6f6c2068617320737461727465640000000000000000000000000000000081525060200191505060405180910390fd5b808210611791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612c85602e913960400191505060405180910390fd5b8143106117e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612cd96030913960400191505060405180910390fd5b81600681905550806005819055506006546007819055507f7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce068282604051808381526020018281526020019250505060405180910390a15050565b61184b61231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461190b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260149054906101000a900460ff1661198d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4d7573742062652073657400000000000000000000000000000000000000000081525060200191505060405180910390fd5b8115611a16576008548111611a0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6577206c696d6974206d75737420626520686967686572000000000000000081525060200191505060405180910390fd5b80600881905550611a39565b81600260146101000a81548160ff02191690831515021790555060006008819055505b7f241f67ee5f41b7a5cabf911367329be7215900f602ebfc47f89dce2a6bcd847c6008546040518082815260200191505060405180910390a15050565b60075481565b60026001541415611af5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026001819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600260149054906101000a900460ff1615611be457600854611b6f82600001548461258190919063ffffffff16565b1115611be3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5573657220616d6f756e742061626f7665206c696d697400000000000000000081525060200191505060405180910390fd5b5b81600460008282540192505081905550611bfc612323565b600081600001541115611ca9576000611c4e8260010154611c40600a54611c3260035487600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b90506000811115611ca757611ca63382600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b5b505b6000821115611d2157611cc982826000015461258190919063ffffffff16565b8160000181905550611d20333084600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612609909392919063ffffffff16565b5b611d4e600a54611d4060035484600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a2506001808190555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60026001541415611e54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026001819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154905060008260000181905550600082600101819055506000811115611f2357611f123382600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b806004600082825403925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969583600001546040518082815260200191505060405180910390a2505060018081905550565b611f8861231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156120ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c5f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60045481565b600080600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006004549050600754431180156121ee575060008114155b156122a8576000612201600754436126ca565b9050600061221a600954836123c590919063ffffffff16565b905060006122596122488561223a600a54866123c590919063ffffffff16565b61244b90919063ffffffff16565b60035461258190919063ffffffff16565b905061229c856001015461228e600a54612280858a600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b955050505050506122f0565b6122eb82600101546122dd600a546122cf60035487600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b925050505b919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6007544311612331576123c3565b60006004549050600081141561234e5743600781905550506123c3565b600061235c600754436126ca565b90506000612375600954836123c590919063ffffffff16565b90506123b26123a184612393600a54856123c590919063ffffffff16565b61244b90919063ffffffff16565b60035461258190919063ffffffff16565b600381905550436007819055505050505b565b6000808314156123d85760009050612445565b60008284029050828482816123e957fe5b0414612440576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d096021913960400191505060405180910390fd5b809150505b92915050565b600061248d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061271f565b905092915050565b60006124d783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127e5565b905092915050565b61257c8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506128a5565b505050565b6000808284019050838110156125ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6126c4846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506128a5565b50505050565b600060055482116126ef576126e8838361249590919063ffffffff16565b9050612719565b60055483106127015760009050612719565b6127168360055461249590919063ffffffff16565b90505b92915050565b600080831182906127cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612790578082015181840152602081019050612775565b50505050905090810190601f1680156127bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816127d757fe5b049050809150509392505050565b6000838311158290612892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561285757808201518184015260208101905061283c565b50505050905090810190601f1680156128845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060612907826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166129949092919063ffffffff16565b905060008151111561298f5780806020019051602081101561292857600080fd5b810190808051906020019092919050505061298e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612c35602a913960400191505060405180910390fd5b5b505050565b60606129a384846000856129ac565b90509392505050565b606082471015612a07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cb36026913960400191505060405180910390fd5b612a1085612b55565b612a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612ad25780518252602082019150602081019050602083039250612aaf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612b34576040519150601f19603f3d011682016040523d82523d6000602084013e612b39565b606091505b5091509150612b49828286612b68565b92505050949350505050565b600080823b905060008111915050919050565b60608315612b7857829050612c2d565b600083511115612b8b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612bf2578082015181840152602081019050612bd7565b50505050905090810190601f168015612c1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4e6577207374617274426c6f636b206d75737420626520686967686572207468616e2063757272656e7420626c6f636b536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212206868eda0ccd5ed1a68341a59ebe18e8d972df73b3933f4271ea30e48a772b54e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x21 PUSH2 0x10C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2D5F DUP1 PUSH3 0x124 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF36CC893 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x724 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0xCC7A262E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x660 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x92E8990E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x92E8990E EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x9513997F EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA0B40905 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x5C2 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x8F662915 EQ PUSH2 0x512 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F138D4B GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x80DC0672 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x83A5041C EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x879D9090 EQ PUSH2 0x4A2 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F138D4B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x514F4A42 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x66FE9F8A EQ PUSH2 0x3C4 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2DE68155 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2DE68155 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3279BEAB EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x304 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x1F8A976 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0xF0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F4 PUSH2 0x1095 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1166 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AA PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x586 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1843 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CA PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH2 0x1DDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B6 PUSH2 0x218B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72C PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x760 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xC4D677EEF92893AC7EC52FAF8140FC6C851AB4736302B4F3A89DFB20696A0DF DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416D6F756E7420746F20776974686472617720746F6F20686967680000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9EB PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA30 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xA22 PUSH1 0xA SLOAD PUSH2 0xA14 PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xAA8 JUMPI PUSH2 0xA52 DUP4 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xAA7 CALLER DUP5 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xAFF JUMPI PUSH2 0xAFE CALLER DUP3 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xB2C PUSH1 0xA SLOAD PUSH2 0xB1E PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB96 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5E PUSH2 0x14E3 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB7 CALLER DUP3 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xCD5 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74206265207374616B656420746F6B656E00000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE84 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x109D PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420666163746F7279000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x138A JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1408 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D75737420626520696E666572696F7220746F20333000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BE DUP2 PUSH1 0x1E PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA EXP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x14D9 DUP3 PUSH2 0x1F80 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1602 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD NUMBER LT PUSH2 0x1739 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6F6C20686173207374617274656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH2 0x1791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C85 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 NUMBER LT PUSH2 0x17E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CD9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x7CD0AB87D19036F3DFADADB232C78AA4879DDA3F0C994A9D637532410EE2CE06 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x184B PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x190B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x198D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D75737420626520736574000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x1A0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6577206C696D6974206D757374206265206869676865720000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1A39 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x241F67EE5F41B7A5CABF911367329BE7215900F602EBFC47F89DCE2A6BCD847C PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BE4 JUMPI PUSH1 0x8 SLOAD PUSH2 0x1B6F DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5573657220616D6F756E742061626F7665206C696D6974000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BFC PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1CA9 JUMPI PUSH1 0x0 PUSH2 0x1C4E DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1C40 PUSH1 0xA SLOAD PUSH2 0x1C32 PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 CALLER DUP3 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1CC9 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1D20 CALLER ADDRESS DUP5 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2609 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1D4E PUSH1 0xA SLOAD PUSH2 0x1D40 PUSH1 0x3 SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F12 CALLER DUP3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1F88 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x20CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C5F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x7 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x21EE JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x22A8 JUMPI PUSH1 0x0 PUSH2 0x2201 PUSH1 0x7 SLOAD NUMBER PUSH2 0x26CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x221A PUSH1 0x9 SLOAD DUP4 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2259 PUSH2 0x2248 DUP6 PUSH2 0x223A PUSH1 0xA SLOAD DUP7 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x229C DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x228E PUSH1 0xA SLOAD PUSH2 0x2280 DUP6 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x22F0 JUMP JUMPDEST PUSH2 0x22EB DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x22DD PUSH1 0xA SLOAD PUSH2 0x22CF PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD NUMBER GT PUSH2 0x2331 JUMPI PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x234E JUMPI NUMBER PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C PUSH1 0x7 SLOAD NUMBER PUSH2 0x26CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2375 PUSH1 0x9 SLOAD DUP4 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x23B2 PUSH2 0x23A1 DUP5 PUSH2 0x2393 PUSH1 0xA SLOAD DUP6 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x23D8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2445 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x23E9 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2440 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D09 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x271F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x27E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x257C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x28A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x25FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26C4 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x28A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT PUSH2 0x26EF JUMPI PUSH2 0x26E8 DUP4 DUP4 PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 LT PUSH2 0x2701 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2716 DUP4 PUSH1 0x5 SLOAD PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x27CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2790 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2775 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x27BD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x27D7 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2857 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x283C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2884 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2907 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2994 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x298F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x298E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C35 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x29A3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x29AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2A07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A10 DUP6 PUSH2 0x2B55 JUMP JUMPDEST PUSH2 0x2A82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2AD2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B34 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2B49 DUP3 DUP3 DUP7 PUSH2 0x2B68 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2B78 JUMPI DUP3 SWAP1 POP PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2B8B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BF2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BD7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C1F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565644F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F20616464726573734E PUSH6 0x772073746172 PUSH21 0x426C6F636B206D757374206265206C6F7765722074 PUSH9 0x616E206E657720656E PUSH5 0x426C6F636B COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C4E657720 PUSH20 0x74617274426C6F636B206D757374206265206869 PUSH8 0x686572207468616E KECCAK256 PUSH4 0x75727265 PUSH15 0x7420626C6F636B536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 PUSH9 0x68EDA0CCD5ED1A6834 BYTE MSIZE 0xEB 0xE1 DUP15 DUP14 SWAP8 0x2D 0xF7 EXTCODESIZE CODECOPY CALLER DELEGATECALL 0x27 0x1E LOG3 0xE 0x48 0xA7 PUSH19 0xB54E64736F6C634300060C0033000000000000 ",
							"sourceMap": "452:11877:5:-:0;;;2205:70;;;;;;;;;;882:17:1;902:12;:10;;;:12;;:::i;:::-;882:32;;933:9;924:6;;:18;;;;;;;;;;;;;;;;;;990:9;957:43;;986:1;957:43;;;;;;;;;;;;848:159;1645:1:4;1760:7;:22;;;;2258:10:5;2236:19;;:32;;;;;;;;;;;;;;;;;;452:11877;;598:104:0;651:15;685:10;678:17;;598:104;:::o;452:11877:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c80638ae39cac11610104578063b6b55f25116100a2578063f2fde38b11610071578063f2fde38b1461066a578063f36cc893146106ae578063f40f0f52146106cc578063f7c618c114610724576101da565b8063b6b55f25146105e0578063cc7a262e1461060e578063ccd34cd514610642578063db2e21bc14610660576101da565b806392e8990e116100de57806392e8990e146105305780639513997f14610550578063a0b4090514610588578063a9f8d181146105c2576101da565b80638ae39cac146104c05780638da5cb5b146104de5780638f66291514610512576101da565b80633f138d4b1161017c578063715018a61161014b578063715018a6146103e257806380dc0672146103ec57806383a5041c146103f6578063879d9090146104a2576101da565b80633f138d4b1461032457806348cd4cb114610372578063514f4a421461039057806366fe9f8a146103c4576101da565b80632de68155116101b85780632de681551461028a5780632e1a7d4d146102a85780633279beab146102d6578063392e53cd14610304576101da565b806301f8a976146101df5780631959a0021461020d5780631aed65531461026c575b600080fd5b61020b600480360360208110156101f557600080fd5b8101908080359060200190929190505050610758565b005b61024f6004803603602081101561022357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610861565b604051808381526020018281526020019250505060405180910390f35b610274610885565b6040518082815260200191505060405180910390f35b61029261088b565b6040518082815260200191505060405180910390f35b6102d4600480360360208110156102be57600080fd5b8101908080359060200190929190505050610895565b005b610302600480360360208110156102ec57600080fd5b8101908080359060200190929190505050610b8e565b005b61030c610cba565b60405180821515815260200191505060405180910390f35b6103706004803603604081101561033a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ccd565b005b61037a610edd565b6040518082815260200191505060405180910390f35b610398610ee3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103cc610f09565b6040518082815260200191505060405180910390f35b6103ea610f0f565b005b6103f4611095565b005b6104a0600480360360e081101561040c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611166565b005b6104aa6114e3565b6040518082815260200191505060405180910390f35b6104c86115b2565b6040518082815260200191505060405180910390f35b6104e66115b8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61051a6115e1565b6040518082815260200191505060405180910390f35b6105386115e7565b60405180821515815260200191505060405180910390f35b6105866004803603604081101561056657600080fd5b8101908080359060200190929190803590602001909291905050506115fa565b005b6105c06004803603604081101561059e57600080fd5b8101908080351515906020019092919080359060200190929190505050611843565b005b6105ca611a76565b6040518082815260200191505060405180910390f35b61060c600480360360208110156105f657600080fd5b8101908080359060200190929190505050611a7c565b005b610616611daf565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61064a611dd5565b6040518082815260200191505060405180910390f35b610668611ddb565b005b6106ac6004803603602081101561068057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f80565b005b6106b661218b565b6040518082815260200191505060405180910390f35b61070e600480360360208110156106e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612191565b6040518082815260200191505060405180910390f35b61072c6122f5565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61076061231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806009819055507f0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df816040518082815260200191505060405180910390a150565b600d6020528060005260406000206000915090508060000154908060010154905082565b60055481565b6000600454905090565b6002600154141561090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026001819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905081816000015410156109d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f416d6f756e7420746f20776974686472617720746f6f2068696768000000000081525060200191505060405180910390fd5b816004600082825403925050819055506109eb612323565b6000610a308260010154610a22600a54610a1460035487600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b90506000831115610aa857610a5283836000015461249590919063ffffffff16565b8260000181905550610aa73384600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b5b6000811115610aff57610afe3382600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b5b610b2c600a54610b1e60035485600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364846040518082815260200191505060405180910390a250506001808190555050565b610b9661231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c5e6114e3565b811115610c6a57600080fd5b610cb73382600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b50565b600260159054906101000a900460ff1681565b610cd561231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f43616e6e6f74206265207374616b656420746f6b656e0000000000000000000081525060200191505060405180910390fd5b610e8433828473ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b7f74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab781298282604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b610f1761231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fd7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61109d61231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461115d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b43600581905550565b600260159054906101000a900460ff16156111e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f416c726561647920696e697469616c697a65640000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f7420666163746f727900000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600260156101000a81548160ff02191690831515021790555086600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846009819055508360068190555082600581905550600082111561138a576001600260146101000a81548160ff021916908315150217905550816008819055505b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156113f457600080fd5b505afa158015611408573d6000803e3d6000fd5b505050506040513d602081101561141e57600080fd5b810190808051906020019092919050505060ff169050601e81106114aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d75737420626520696e666572696f7220746f2033300000000000000000000081525060200191505060405180910390fd5b6114be81601e61249590919063ffffffff16565b600a0a600a819055506006546007819055506114d982611f80565b5050505050505050565b6000600454600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561157157600080fd5b505afa158015611585573d6000803e3d6000fd5b505050506040513d602081101561159b57600080fd5b810190808051906020019092919050505003905090565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b600260149054906101000a900460ff1681565b61160261231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6006544310611739576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f506f6f6c2068617320737461727465640000000000000000000000000000000081525060200191505060405180910390fd5b808210611791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612c85602e913960400191505060405180910390fd5b8143106117e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612cd96030913960400191505060405180910390fd5b81600681905550806005819055506006546007819055507f7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce068282604051808381526020018281526020019250505060405180910390a15050565b61184b61231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461190b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600260149054906101000a900460ff1661198d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4d7573742062652073657400000000000000000000000000000000000000000081525060200191505060405180910390fd5b8115611a16576008548111611a0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6577206c696d6974206d75737420626520686967686572000000000000000081525060200191505060405180910390fd5b80600881905550611a39565b81600260146101000a81548160ff02191690831515021790555060006008819055505b7f241f67ee5f41b7a5cabf911367329be7215900f602ebfc47f89dce2a6bcd847c6008546040518082815260200191505060405180910390a15050565b60075481565b60026001541415611af5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026001819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600260149054906101000a900460ff1615611be457600854611b6f82600001548461258190919063ffffffff16565b1115611be3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5573657220616d6f756e742061626f7665206c696d697400000000000000000081525060200191505060405180910390fd5b5b81600460008282540192505081905550611bfc612323565b600081600001541115611ca9576000611c4e8260010154611c40600a54611c3260035487600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b90506000811115611ca757611ca63382600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b5b505b6000821115611d2157611cc982826000015461258190919063ffffffff16565b8160000181905550611d20333084600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612609909392919063ffffffff16565b5b611d4e600a54611d4060035484600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b81600101819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c836040518082815260200191505060405180910390a2506001808190555050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60026001541415611e54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b60026001819055506000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154905060008260000181905550600082600101819055506000811115611f2357611f123382600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124df9092919063ffffffff16565b806004600082825403925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd969583600001546040518082815260200191505060405180910390a2505060018081905550565b611f8861231b565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612048576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156120ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612c5f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60045481565b600080600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006004549050600754431180156121ee575060008114155b156122a8576000612201600754436126ca565b9050600061221a600954836123c590919063ffffffff16565b905060006122596122488561223a600a54866123c590919063ffffffff16565b61244b90919063ffffffff16565b60035461258190919063ffffffff16565b905061229c856001015461228e600a54612280858a600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b955050505050506122f0565b6122eb82600101546122dd600a546122cf60035487600001546123c590919063ffffffff16565b61244b90919063ffffffff16565b61249590919063ffffffff16565b925050505b919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6007544311612331576123c3565b60006004549050600081141561234e5743600781905550506123c3565b600061235c600754436126ca565b90506000612375600954836123c590919063ffffffff16565b90506123b26123a184612393600a54856123c590919063ffffffff16565b61244b90919063ffffffff16565b60035461258190919063ffffffff16565b600381905550436007819055505050505b565b6000808314156123d85760009050612445565b60008284029050828482816123e957fe5b0414612440576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612d096021913960400191505060405180910390fd5b809150505b92915050565b600061248d83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061271f565b905092915050565b60006124d783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127e5565b905092915050565b61257c8363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506128a5565b505050565b6000808284019050838110156125ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6126c4846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506128a5565b50505050565b600060055482116126ef576126e8838361249590919063ffffffff16565b9050612719565b60055483106127015760009050612719565b6127168360055461249590919063ffffffff16565b90505b92915050565b600080831182906127cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612790578082015181840152602081019050612775565b50505050905090810190601f1680156127bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816127d757fe5b049050809150509392505050565b6000838311158290612892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561285757808201518184015260208101905061283c565b50505050905090810190601f1680156128845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6060612907826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166129949092919063ffffffff16565b905060008151111561298f5780806020019051602081101561292857600080fd5b810190808051906020019092919050505061298e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612c35602a913960400191505060405180910390fd5b5b505050565b60606129a384846000856129ac565b90509392505050565b606082471015612a07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612cb36026913960400191505060405180910390fd5b612a1085612b55565b612a82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612ad25780518252602082019150602081019050602083039250612aaf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612b34576040519150601f19603f3d011682016040523d82523d6000602084013e612b39565b606091505b5091509150612b49828286612b68565b92505050949350505050565b600080823b905060008111915050919050565b60608315612b7857829050612c2d565b600083511115612b8b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612bf2578082015181840152602081019050612bd7565b50505050905090810190601f168015612c1f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe5361666542455032303a204245503230206f7065726174696f6e20646964206e6f7420737563636565644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4e6577207374617274426c6f636b206d75737420626520686967686572207468616e2063757272656e7420626c6f636b536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212206868eda0ccd5ed1a68341a59ebe18e8d972df73b3933f4271ea30e48a772b54e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AE39CAC GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF36CC893 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x724 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0xCC7A262E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xCCD34CD5 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x660 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x92E8990E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x92E8990E EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x9513997F EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA0B40905 EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x5C2 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x8F662915 EQ PUSH2 0x512 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F138D4B GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x80DC0672 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x83A5041C EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x879D9090 EQ PUSH2 0x4A2 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x3F138D4B EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x514F4A42 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x66FE9F8A EQ PUSH2 0x3C4 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x2DE68155 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x2DE68155 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3279BEAB EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x304 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x1F8A976 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x895 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCCD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0xF0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F4 PUSH2 0x1095 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1166 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AA PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E6 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51A PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x586 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1843 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CA PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH2 0x1DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x668 PUSH2 0x1DDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B6 PUSH2 0x218B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72C PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x760 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xC4D677EEF92893AC7EC52FAF8140FC6C851AB4736302B4F3A89DFB20696A0DF DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416D6F756E7420746F20776974686472617720746F6F20686967680000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9EB PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA30 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xA22 PUSH1 0xA SLOAD PUSH2 0xA14 PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0xAA8 JUMPI PUSH2 0xA52 DUP4 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xAA7 CALLER DUP5 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xAFF JUMPI PUSH2 0xAFE CALLER DUP3 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xB2C PUSH1 0xA SLOAD PUSH2 0xB1E PUSH1 0x3 SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB96 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5E PUSH2 0x14E3 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xC6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB7 CALLER DUP3 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xCD5 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74206265207374616B656420746F6B656E00000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE84 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x109D PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416C726561647920696E697469616C697A656400000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7420666163746F7279000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x138A JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1408 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D75737420626520696E666572696F7220746F20333000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BE DUP2 PUSH1 0x1E PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA EXP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x14D9 DUP3 PUSH2 0x1F80 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1602 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD NUMBER LT PUSH2 0x1739 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6F6C20686173207374617274656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH2 0x1791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C85 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 NUMBER LT PUSH2 0x17E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CD9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x7CD0AB87D19036F3DFADADB232C78AA4879DDA3F0C994A9D637532410EE2CE06 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x184B PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x190B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x198D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4D75737420626520736574000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x8 SLOAD DUP2 GT PUSH2 0x1A0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6577206C696D6974206D757374206265206869676865720000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1A39 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x241F67EE5F41B7A5CABF911367329BE7215900F602EBFC47F89DCE2A6BCD847C PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BE4 JUMPI PUSH1 0x8 SLOAD PUSH2 0x1B6F DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1BE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5573657220616D6F756E742061626F7665206C696D6974000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BFC PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1CA9 JUMPI PUSH1 0x0 PUSH2 0x1C4E DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1C40 PUSH1 0xA SLOAD PUSH2 0x1C32 PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1CA7 JUMPI PUSH2 0x1CA6 CALLER DUP3 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1CC9 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1D20 CALLER ADDRESS DUP5 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2609 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1D4E PUSH1 0xA SLOAD PUSH2 0x1D40 PUSH1 0x3 SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1E54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F12 CALLER DUP3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x24DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1F88 PUSH2 0x231B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2048 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x20CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C5F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x7 SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x21EE JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x22A8 JUMPI PUSH1 0x0 PUSH2 0x2201 PUSH1 0x7 SLOAD NUMBER PUSH2 0x26CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x221A PUSH1 0x9 SLOAD DUP4 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2259 PUSH2 0x2248 DUP6 PUSH2 0x223A PUSH1 0xA SLOAD DUP7 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x229C DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x228E PUSH1 0xA SLOAD PUSH2 0x2280 DUP6 DUP11 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP PUSH2 0x22F0 JUMP JUMPDEST PUSH2 0x22EB DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x22DD PUSH1 0xA SLOAD PUSH2 0x22CF PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD NUMBER GT PUSH2 0x2331 JUMPI PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x234E JUMPI NUMBER PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP PUSH2 0x23C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C PUSH1 0x7 SLOAD NUMBER PUSH2 0x26CA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2375 PUSH1 0x9 SLOAD DUP4 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x23B2 PUSH2 0x23A1 DUP5 PUSH2 0x2393 PUSH1 0xA SLOAD DUP6 PUSH2 0x23C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x244B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2581 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x23D8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2445 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x23E9 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2440 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D09 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x271F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x27E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x257C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x28A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x25FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26C4 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x28A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT PUSH2 0x26EF JUMPI PUSH2 0x26E8 DUP4 DUP4 PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 LT PUSH2 0x2701 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2716 DUP4 PUSH1 0x5 SLOAD PUSH2 0x2495 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x27CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2790 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2775 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x27BD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x27D7 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2857 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x283C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2884 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2907 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2994 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x298F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x298E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C35 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x29A3 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x29AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2A07 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CB3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A10 DUP6 PUSH2 0x2B55 JUMP JUMPDEST PUSH2 0x2A82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2AD2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2AAF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B34 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2B49 DUP3 DUP3 DUP7 PUSH2 0x2B68 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2B78 JUMPI DUP3 SWAP1 POP PUSH2 0x2C2D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2B8B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BF2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BD7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C1F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 TIMESTAMP GASLIMIT POP ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565644F776E61626C653A206E6577206F PUSH24 0x6E657220697320746865207A65726F20616464726573734E PUSH6 0x772073746172 PUSH21 0x426C6F636B206D757374206265206C6F7765722074 PUSH9 0x616E206E657720656E PUSH5 0x426C6F636B COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C4E657720 PUSH20 0x74617274426C6F636B206D757374206265206869 PUSH8 0x686572207468616E KECCAK256 PUSH4 0x75727265 PUSH15 0x7420626C6F636B536166654D617468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 PUSH9 0x68EDA0CCD5ED1A6834 BYTE MSIZE 0xEB 0xE1 DUP15 DUP14 SWAP8 0x2D 0xF7 EXTCODESIZE CODECOPY CALLER DELEGATECALL 0x27 0x1E LOG3 0xE 0x48 0xA7 PUSH19 0xB54E64736F6C634300060C0033000000000000 ",
							"sourceMap": "452:11877:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8855:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1540:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;959:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12237:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5291:820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6938:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;778:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7408:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1042:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;633:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1193:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1706:145:1;;;:::i;:::-;;7870:86:5;;;:::i;:::-;;2713:1204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6117:131;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1268:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1083:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;841:31:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;714:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9263:684;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8174:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1122:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4069:1078;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1450:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1332:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6383:443;;;:::i;:::-;;2000:240:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;878:28:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10113:933;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1394:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8855:172;1297:12:1;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8956:15:5::1;8939:14;:32;;;;8986:34;9004:15;8986:34;;;;;;;;;;;;;;;;;;8855:172:::0;:::o;1540:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;959:28::-;;;;:::o;12237:90::-;12284:4;12307:13;;12300:20;;12237:90;:::o;5291:820::-;1688:1:4;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;5358:21:5::1;5382:8;:20;5391:10;5382:20;;;;;;;;;;;;;;;5358:44;;5435:7;5420:4;:11;;;:22;;5412:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5501:7;5484:13;;:24;;;;;;;;;;;5519:13;:11;:13::i;:::-;5543:15;5561:128;5673:4;:15;;;5561:94;5638:16;;5561:59;5603:16;;5561:4;:24;;;:41;;:59;;;;:::i;:::-;:76;;:94;;;;:::i;:::-;:111;;:128;;;;:::i;:::-;5543:146;;5714:1;5704:7;:11;5700:148;;;5745:24;5761:7;5745:4;:11;;;:15;;:24;;;;:::i;:::-;5731:4;:11;;:38;;;;5783:54;5816:10;5829:7;5783:11;;;;;;;;;;;:24;;;;:54;;;;;:::i;:::-;5700:148;5872:1;5862:7;:11;5858:96;;;5889:54;5922:10;5935:7;5889:11;;;;;;;;;;;:24;;;;:54;;;;;:::i;:::-;5858:96;5982:77;6033:16;;5982:33;5998:16;;5982:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:77;;;;:::i;:::-;5964:4;:15;;:95;;;;6084:10;6075:29;;;6096:7;6075:29;;;;;;;;;;;;;;;;;;2436:1:4;;1645::::0;2580:7;:22;;;;5291:820:5;:::o;6938:188::-;1297:12:1;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7036:18:5::1;:16;:18::i;:::-;7025:7;:29;;7017:38;;;::::0;::::1;;7065:54;7098:10;7111:7;7065:11;;;;;;;;;;;:24;;;;:54;;;;;:::i;:::-;6938:188:::0;:::o;778:25::-;;;;;;;;;;;;;:::o;7408:378::-;1297:12:1;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7576:11:5::1;;;;;;;;;;;7551:37;;:13;:37;;;;7530:106;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;7647:69;7690:10;7703:12;7654:13;7647:34;;;;:69;;;;;:::i;:::-;7732:47;7751:13;7766:12;7732:47;;;;;;;;;;;;;;;;;;;;;;;;;;7408:378:::0;;:::o;1042:25::-;;;;:::o;633:34::-;;;;;;;;;;;;;:::o;1193:31::-;;;;:::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1775:40;;1796:6;::::0;::::1;;;;;;;;1775:40;;;;;;;;;;;;1842:1;1825:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1706:145::o:0;7870:86:5:-;1297:12:1;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7937:12:5::1;7921:13;:28;;;;7870:86::o:0;2713:1204::-;2978:13;;;;;;;;;;;2977:14;2969:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:19;;;;;;;;;;;3033:33;;:10;:33;;;3025:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:4;3135:13;;:20;;;;;;;;;;;;;;;;;;3180:12;3166:11;;:26;;;;;;;;;;;;;;;;;;3216:12;3202:11;;:26;;;;;;;;;;;;;;;;;;3255:15;3238:14;:32;;;;3293:11;3280:10;:24;;;;3330:14;3314:13;:30;;;;3379:1;3359:17;:21;3355:121;;;3411:4;3396:12;;:19;;;;;;;;;;;;;;;;;;3448:17;3429:16;:36;;;;3355:121;3486:27;3524:11;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:31;;3486:61;;3587:2;3565:19;:24;3557:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3659:36;3675:19;3667:2;3659:15;;:36;;;;:::i;:::-;3654:2;:42;3627:16;:70;;;;3779:10;;3761:15;:28;;;;3885:25;3903:6;3885:17;:25::i;:::-;2713:1204;;;;;;;;:::o;6117:131::-;6166:4;6228:13;;6189:11;;;;;;;;;;;:21;;;6219:4;6189:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:52;6182:59;;6117:131;:::o;1268:29::-;;;;:::o;1083:77:1:-;1121:7;1147:6;;;;;;;;;;;1140:13;;1083:77;:::o;841:31:5:-;;;;:::o;714:24::-;;;;;;;;;;;;;:::o;9263:684::-;1297:12:1;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9415:10:5::1;;9400:12;:25;9392:54;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;9491:14;9477:11;:28;9456:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9623:11;9608:12;:26;9587:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9732:11;9719:10;:24;;;;9769:14;9753:13;:30;;;;9865:10;;9847:15;:28;;;;9891:49;9912:11;9925:14;9891:49;;;;;;;;;;;;;;;;;;;;;;;;9263:684:::0;;:::o;8174:533::-;1297:12:1;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8312:12:5::1;;;;;;;;;;;8304:36;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8354:13;8350:306;;;8428:16;;8408:17;:36;8383:119;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8535:17;8516:16;:36;;;;8350:306;;;8598:13;8583:12;;:28;;;;;;;;;;;;;;;;;;8644:1;8625:16;:20;;;;8350:306;8670:30;8683:16;;8670:30;;;;;;;;;;;;;;;;;;8174:533:::0;;:::o;1122:30::-;;;;:::o;4069:1078::-;1688:1:4;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;4135:21:5::1;4159:8;:20;4168:10;4159:20;;;;;;;;;;;;;;;4135:44;;4194:12;;;;;;;;;;;4190:169;;;4275:16;;4247:24;4259:4;:11;;;4247:7;:11;;:24;;;;:::i;:::-;:44;;4222:126;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4190:169;4385:7;4368:13;;:24;;;;;;;;;;;4403:13;:11;:13::i;:::-;4445:1;4431:4;:11;;;:15;4427:325;;;4462:15;4480:144;4608:4;:15;;;4480:106;4569:16;;4480:67;4530:16;;4480:4;:28;;;:49;;:67;;;;:::i;:::-;:88;;:106;;;;:::i;:::-;:127;;:144;;;;:::i;:::-;4462:162;;4652:1;4642:7;:11;4638:104;;;4673:54;4706:10;4719:7;4673:11;;;;;;;;;;;:24;;;;:54;;;;;:::i;:::-;4638:104;4427:325;;4776:1;4766:7;:11;4762:229;;;4807:24;4823:7;4807:4;:11;;;:15;;:24;;;;:::i;:::-;4793:4;:11;;:38;;;;4845:135;4899:10;4936:4;4959:7;4845:11;;;;;;;;;;;:28;;;;:135;;;;;;:::i;:::-;4762:229;5019:77;5070:16;;5019:33;5035:16;;5019:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:77;;;;:::i;:::-;5001:4;:15;;:95;;;;5120:10;5112:28;;;5132:7;5112:28;;;;;;;;;;;;;;;;;;2436:1:4;1645::::0;2580:7;:22;;;;4069:1078:5;:::o;1450:25::-;;;;;;;;;;;;;:::o;1332:31::-;;;;:::o;6383:443::-;1688:1:4;2277:7;;:19;;2269:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;;;;6444:21:5::1;6468:8;:20;6477:10;6468:20;;;;;;;;;;;;;;;6444:44;;6498:24;6525:4;:11;;;6498:38;;6560:1;6546:4;:11;;:15;;;;6589:1;6571:4;:15;;:19;;;;6624:1;6605:16;:20;6601:161;;;6641:63;6674:10;6687:16;6641:11;;;;;;;;;;;:24;;;;:63;;;;;:::i;:::-;6735:16;6718:13;;:33;;;;;;;;;;;6601:161;6795:10;6777:42;;;6807:4;:11;;;6777:42;;;;;;;;;;;;;;;;;;2436:1:4;;1645::::0;2580:7;:22;;;;6383:443:5:o;2000:240:1:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:1:::1;2088:22;;:8;:22;;;;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:8;2168:38;;2189:6;::::0;::::1;;;;;;;;2168:38;;;;;;;;;;;;2225:8;2216:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2000:240:::0;:::o;878:28:5:-;;;;:::o;10113:933::-;10174:7;10193:21;10217:8;:15;10226:5;10217:15;;;;;;;;;;;;;;;10193:39;;10242:25;10270:13;;10242:41;;10312:15;;10297:12;:30;:56;;;;;10352:1;10331:17;:22;;10297:56;10293:747;;;10369:18;10390:45;10405:15;;10422:12;10390:14;:45::i;:::-;10369:66;;10449:21;10473:30;10488:14;;10473:10;:14;;:30;;;;:::i;:::-;10449:54;;10517:29;10549:110;10587:58;10627:17;10587:35;10605:16;;10587:13;:17;;:35;;;;:::i;:::-;:39;;:58;;;;:::i;:::-;10549:16;;:20;;:110;;;;:::i;:::-;10517:142;;10696:165;10845:4;:15;;;10696:123;10802:16;;10696:80;10754:21;10696:4;:32;;;:57;;:80;;;;:::i;:::-;:105;;:123;;;;:::i;:::-;:148;;:165;;;;:::i;:::-;10673:188;;;;;;;;;10293:747;10915:114;10996:4;:15;;;10915:55;10953:16;;10915:33;10931:16;;10915:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:55;;;;:::i;:::-;:59;;:114;;;;:::i;:::-;10892:137;;;;10113:933;;;;:::o;1394:25::-;;;;;;;;;;;;;:::o;598:104:0:-;651:15;685:10;678:17;;598:104;:::o;11142:593:5:-;11204:15;;11188:12;:31;11184:68;;11235:7;;11184:68;11262:25;11290:13;;11262:41;;11339:1;11318:17;:22;11314:103;;;11374:12;11356:15;:30;;;;11400:7;;;11314:103;11427:18;11448:45;11463:15;;11480:12;11448:14;:45::i;:::-;11427:66;;11503:21;11527:30;11542:14;;11527:10;:14;;:30;;;;:::i;:::-;11503:54;;11586:102;11620:58;11660:17;11620:35;11638:16;;11620:13;:17;;:35;;;;:::i;:::-;:39;;:58;;;;:::i;:::-;11586:16;;:20;;:102;;;;:::i;:::-;11567:16;:121;;;;11716:12;11698:15;:30;;;;11142:593;;;;:::o;2188:459:2:-;2246:7;2492:1;2487;:6;2483:45;;;2516:1;2509:8;;;;2483:45;2538:9;2554:1;2550;:5;2538:17;;2582:1;2577;2573;:5;;;;;;:10;2565:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2639:1;2632:8;;;2188:459;;;;;:::o;3109:130::-;3167:7;3193:39;3197:1;3200;3193:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3186:46;;3109:130;;;;:::o;1329:134::-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1406:50;;1329:134;;;;:::o;837:239:7:-;949:120;982:5;1024:23;;;1049:2;1053:5;1001:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:19;:120::i;:::-;837:239;;;:::o;882:176:2:-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o;1082:275:7:-;1220:130;1253:5;1295:27;;;1324:4;1330:2;1334:5;1272:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:19;:130::i;:::-;1082:275;;;;:::o;11902:329:5:-;12001:7;12035:13;;12028:3;:20;12024:201;;12071:14;12079:5;12071:3;:7;;:14;;;;:::i;:::-;12064:21;;;;12024:201;12115:13;;12106:5;:22;12102:123;;12151:1;12144:8;;;;12102:123;12190:24;12208:5;12190:13;;:17;;:24;;;;:::i;:::-;12183:31;;11902:329;;;;;:::o;3721:272:2:-;3807:7;3838:1;3834;:5;3841:12;3826:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:9;3880:1;3876;:5;;;;;;3864:17;;3985:1;3978:8;;;3721:272;;;;;:::o;1754:187::-;1840:7;1872:1;1867;:6;;1875:12;1859:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:9;1914:1;1910;:5;1898:17;;1933:1;1926:8;;;1754:187;;;;;:::o;3564:843:7:-;3983:23;4009:103;4050:4;4009:103;;;;;;;;;;;;;;;;;4017:5;4009:27;;;;:103;;;;;:::i;:::-;3983:129;;4146:1;4126:10;:17;:21;4122:279;;;4295:10;4284:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4259:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4122:279;3564:843;;;:::o;3581:193:3:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;6111:725::-;6226:12;6254:7;6250:580;;;6284:10;6277:17;;;;6250:580;6415:1;6395:10;:17;:21;6391:429;;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6792:12;6785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6111:725;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2323000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GenericStakeFactory()": "1137",
								"PRECISION_FACTOR()": "1094",
								"accTokenPerShare()": "1095",
								"availableRewards()": "infinite",
								"bonusEndBlock()": "1096",
								"deposit(uint256)": "infinite",
								"emergencyRewardWithdraw(uint256)": "infinite",
								"emergencyWithdraw()": "infinite",
								"hasUserLimit()": "1142",
								"initialize(address,address,uint256,uint256,uint256,uint256,address)": "infinite",
								"isInitialized()": "1209",
								"lastRewardBlock()": "1116",
								"owner()": "1123",
								"pendingReward(address)": "infinite",
								"poolLimitPerUser()": "1117",
								"recoverWrongTokens(address,uint256)": "infinite",
								"renounceOwnership()": "24336",
								"rewardPerBlock()": "1051",
								"rewardToken()": "1157",
								"stakedByUsers()": "1071",
								"stakedToken()": "1114",
								"startBlock()": "1073",
								"stopReward()": "21126",
								"totalWKDStaked()": "1059",
								"transferOwnership(address)": "infinite",
								"updatePoolLimitPerUser(bool,uint256)": "29976",
								"updateRewardPerBlock(uint256)": "22258",
								"updateStartAndEndBlocks(uint256,uint256)": "infinite",
								"userInfo(address)": "2084",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_getMultiplier(uint256,uint256)": "infinite",
								"_updatePool()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2205,
									"end": 2275,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 882,
									"end": 899,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 902,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 902,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 912,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 902,
									"end": 914,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 914,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 902,
									"end": 914,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 902,
									"end": 914,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 902,
									"end": 914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 882,
									"end": 914,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 882,
									"end": 914,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 933,
									"end": 942,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 930,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 924,
									"end": 942,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 990,
									"end": 999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 986,
									"end": 987,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1000,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 848,
									"end": 1007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1646,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1760,
									"end": 1767,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2258,
									"end": 2268,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2255,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2236,
									"end": 2255,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2268,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 452,
									"end": 12329,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206868eda0ccd5ed1a68341a59ebe18e8d972df73b3933f4271ea30e48a772b54e64736f6c634300060c0033",
									".code": [
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "8AE39CAC"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "B6B55F25"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "F36CC893"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "F40F0F52"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "B6B55F25"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "CC7A262E"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "CCD34CD5"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "DB2E21BC"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "92E8990E"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "92E8990E"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "9513997F"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "A0B40905"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "A9F8D181"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "8AE39CAC"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "8F662915"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "3F138D4B"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "80DC0672"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "83A5041C"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "879D9090"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "3F138D4B"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "48CD4CB1"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "514F4A42"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "66FE9F8A"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "2DE68155"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "2DE68155"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "3279BEAB"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "392E53CD"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "1F8A976"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "1959A002"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "1AED6553"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 452,
											"end": 12329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 841,
											"end": 872,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 878,
											"end": 906,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8956,
											"end": 8971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 8953,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8939,
											"end": 8971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 8971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 8971,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 8971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "PUSH",
											"source": 5,
											"value": "C4D677EEF92893AC7EC52FAF8140FC6C851AB4736302B4F3A89DFB20696A0DF"
										},
										{
											"begin": 9004,
											"end": 9019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8986,
											"end": 9020,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8855,
											"end": 9027,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1584,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12284,
											"end": 12288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12320,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12307,
											"end": 12320,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12300,
											"end": 12320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12300,
											"end": 12320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12237,
											"end": 12327,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5401,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5402,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5431,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E7420746F20776974686472617720746F6F20686967680000000000"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5497,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5519,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5519,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5519,
											"end": 5532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5519,
											"end": 5532,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5519,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5688,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5673,
											"end": 5688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5688,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5638,
											"end": 5654,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5638,
											"end": 5654,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5603,
											"end": 5619,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5603,
											"end": 5619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5561,
											"end": 5602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5561,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5561,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5561,
											"end": 5672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5561,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5711,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 5715,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5848,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5700,
											"end": 5848,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5749,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5756,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5756,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5745,
											"end": 5760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5745,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5735,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5769,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5816,
											"end": 5826,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5836,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5807,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5807,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5783,
											"end": 5807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5783,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5700,
											"end": 5848,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5700,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5862,
											"end": 5869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5862,
											"end": 5873,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5954,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5858,
											"end": 5954,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5922,
											"end": 5932,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5935,
											"end": 5942,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5889,
											"end": 5900,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 5889,
											"end": 5913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5889,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5954,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5858,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5998,
											"end": 6014,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5998,
											"end": 6014,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5993,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5982,
											"end": 5997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5982,
											"end": 6019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5982,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 5968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 5979,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5964,
											"end": 5979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 6059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 6059,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 6059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6094,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 6096,
											"end": 6103,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6104,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 6111,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7036,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7025,
											"end": 7054,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7017,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 7098,
											"end": 7108,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7111,
											"end": 7118,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7065,
											"end": 7076,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7065,
											"end": 7089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7065,
											"end": 7089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 7065,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 7126,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 778,
											"end": 803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 778,
											"end": 803,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7576,
											"end": 7587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7564,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7551,
											"end": 7588,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "43616E6E6F74206265207374616B656420746F6B656E00000000000000000000"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7530,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7690,
											"end": 7700,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7715,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7667,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7681,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7647,
											"end": 7681,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7647,
											"end": 7681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7647,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129"
										},
										{
											"begin": 7751,
											"end": 7764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7766,
											"end": 7778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7786,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 633,
											"end": 667,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1224,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1815,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1706,
											"end": 1851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7949,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7934,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7921,
											"end": 7949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7949,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7921,
											"end": 7949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7870,
											"end": 7956,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "416C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2969,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3047,
											"end": 3066,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420666163746F7279000000000000000000000000000000000000000000"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3025,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3135,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3135,
											"end": 3148,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3192,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3177,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3166,
											"end": 3177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3166,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3228,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3202,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3293,
											"end": 3304,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3280,
											"end": 3304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3304,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3314,
											"end": 3344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3344,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3379,
											"end": 3380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3380,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3355,
											"end": 3476,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3355,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3355,
											"end": 3476,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3448,
											"end": 3465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3445,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3429,
											"end": 3465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3465,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3355,
											"end": 3476,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3355,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3516,
											"end": 3547,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3516,
											"end": 3547,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3587,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3565,
											"end": 3584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "4D75737420626520696E666572696F7220746F20333000000000000000000000"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3557,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3675,
											"end": 3694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3659,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3654,
											"end": 3696,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3643,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3627,
											"end": 3697,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3697,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3779,
											"end": 3789,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3779,
											"end": 3789,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3776,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3761,
											"end": 3789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 3917,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6241,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6228,
											"end": 6241,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6200,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6210,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6241,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6117,
											"end": 6248,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1297,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 841,
											"end": 872,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 872,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 714,
											"end": 738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 714,
											"end": 738,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9425,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9415,
											"end": 9425,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9412,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9425,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "506F6F6C20686173207374617274656400000000000000000000000000000000"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9392,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9491,
											"end": 9505,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9505,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "2E"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH data",
											"source": 5,
											"value": "55E8B512461165150226D7FB62AF16288A660C0FC1F35821BA4AD8AD658A0BB0"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "2E"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 9456,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9608,
											"end": 9620,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 9608,
											"end": 9634,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH data",
											"source": 5,
											"value": "8DDAF6510EFEC06EAA5007F0744244862092545BC763E566E2661C53C8FF3A7E"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 9587,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9732,
											"end": 9743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9719,
											"end": 9729,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9719,
											"end": 9743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9719,
											"end": 9743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9719,
											"end": 9743,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9719,
											"end": 9743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9769,
											"end": 9783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9753,
											"end": 9766,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9753,
											"end": 9783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9753,
											"end": 9783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9753,
											"end": 9783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9753,
											"end": 9783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9865,
											"end": 9875,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9865,
											"end": 9875,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9862,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9847,
											"end": 9875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9875,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9847,
											"end": 9875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "PUSH",
											"source": 5,
											"value": "7CD0AB87D19036F3DFADADB232C78AA4879DDA3F0C994A9D637532410EE2CE06"
										},
										{
											"begin": 9912,
											"end": 9923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9925,
											"end": 9939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9940,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9947,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8312,
											"end": 8324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "4D75737420626520736574000000000000000000000000000000000000000000"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8304,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8354,
											"end": 8367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8428,
											"end": 8444,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 8428,
											"end": 8444,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8444,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "4E6577206C696D6974206D757374206265206869676865720000000000000000"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 8383,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8535,
											"end": 8552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8532,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 8516,
											"end": 8552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8516,
											"end": 8552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8598,
											"end": 8611,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8595,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 8583,
											"end": 8595,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8641,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 8350,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "PUSH",
											"source": 5,
											"value": "241F67EE5F41B7A5CABF911367329BE7215900F602EBFC47F89DCE2A6BCD847C"
										},
										{
											"begin": 8683,
											"end": 8699,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 8683,
											"end": 8699,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8174,
											"end": 8707,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1152,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4178,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4179,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4135,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4291,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4275,
											"end": 4291,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4259,
											"end": 4263,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4254,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4247,
											"end": 4258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4247,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4291,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4291,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "5573657220616D6F756E742061626F7665206C696D6974000000000000000000"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4222,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4368,
											"end": 4392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4403,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4403,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4403,
											"end": 4416,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4403,
											"end": 4416,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4403,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4446,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4752,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4427,
											"end": 4752,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4623,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4608,
											"end": 4623,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4569,
											"end": 4585,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4569,
											"end": 4585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4530,
											"end": 4546,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4530,
											"end": 4546,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4508,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4480,
											"end": 4529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4480,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4480,
											"end": 4568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4480,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4480,
											"end": 4607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4480,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4653,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4742,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4638,
											"end": 4742,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4706,
											"end": 4716,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4719,
											"end": 4726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4673,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4742,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4638,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4752,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4427,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 4777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4773,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4777,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4762,
											"end": 4991,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4823,
											"end": 4830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4818,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4807,
											"end": 4822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4807,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4899,
											"end": 4909,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4856,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4845,
											"end": 4873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4845,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4991,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4762,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5070,
											"end": 5086,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5070,
											"end": 5086,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5035,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5035,
											"end": 5051,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5023,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5030,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5019,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5019,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5019,
											"end": 5056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5019,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5096,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5130,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5140,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 5147,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1475,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1363,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6444,
											"end": 6465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6476,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6487,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6488,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6444,
											"end": 6488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6444,
											"end": 6488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6522,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6590,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6625,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6762,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6601,
											"end": 6762,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6674,
											"end": 6684,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6652,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6665,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6665,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6641,
											"end": 6665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6641,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6735,
											"end": 6751,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6731,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6718,
											"end": 6731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6718,
											"end": 6751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6762,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6601,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6795,
											"end": 6805,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "PUSH",
											"source": 5,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6818,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6819,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6826,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1297,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1279,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH data",
											"source": 1,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2080,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2206,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 878,
											"end": 906,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10174,
											"end": 10181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10193,
											"end": 10214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10225,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10226,
											"end": 10231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10232,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10193,
											"end": 10232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10193,
											"end": 10232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10242,
											"end": 10267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10283,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10270,
											"end": 10283,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10242,
											"end": 10283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10242,
											"end": 10283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10327,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 10312,
											"end": 10327,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10309,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10327,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 10297,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 11040,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 10293,
											"end": 11040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10405,
											"end": 10420,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 10405,
											"end": 10420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10422,
											"end": 10434,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 10390,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 10390,
											"end": 10435,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10390,
											"end": 10435,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10390,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10369,
											"end": 10435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10369,
											"end": 10435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10449,
											"end": 10470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10483,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 10473,
											"end": 10487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 10473,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10449,
											"end": 10503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10449,
											"end": 10503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10627,
											"end": 10644,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10600,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 10587,
											"end": 10604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10587,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 10587,
											"end": 10626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10587,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10565,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10549,
											"end": 10565,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 10549,
											"end": 10569,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10549,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10659,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 10845,
											"end": 10849,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10845,
											"end": 10860,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10845,
											"end": 10860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10845,
											"end": 10860,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 10802,
											"end": 10818,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 10754,
											"end": 10775,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10700,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10728,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 10696,
											"end": 10753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 10696,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 10696,
											"end": 10801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 10696,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 10696,
											"end": 10844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 10696,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10673,
											"end": 10861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10293,
											"end": 11040,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 10293,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10996,
											"end": 11000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11011,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10996,
											"end": 11011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11011,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10953,
											"end": 10969,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 10953,
											"end": 10969,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10931,
											"end": 10947,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10931,
											"end": 10947,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10919,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10915,
											"end": 10926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10926,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 10915,
											"end": 10930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10915,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 10915,
											"end": 10952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10915,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 10915,
											"end": 10974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10915,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 11029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 11029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 11029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 11029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 11046,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1419,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11204,
											"end": 11219,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11204,
											"end": 11219,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11188,
											"end": 11200,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 11188,
											"end": 11219,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11184,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 11184,
											"end": 11252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11235,
											"end": 11242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11235,
											"end": 11242,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11184,
											"end": 11252,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 11184,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11290,
											"end": 11303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11290,
											"end": 11303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11262,
											"end": 11303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11318,
											"end": 11340,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11417,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11314,
											"end": 11417,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11374,
											"end": 11386,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 11356,
											"end": 11371,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11356,
											"end": 11386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11356,
											"end": 11386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11356,
											"end": 11386,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11356,
											"end": 11386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11400,
											"end": 11407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11400,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11400,
											"end": 11407,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11314,
											"end": 11417,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11314,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11463,
											"end": 11478,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11463,
											"end": 11478,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11480,
											"end": 11492,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 11448,
											"end": 11462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11448,
											"end": 11493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11427,
											"end": 11493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11427,
											"end": 11493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11524,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11542,
											"end": 11556,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11542,
											"end": 11556,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11537,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11527,
											"end": 11541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11527,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11503,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 11660,
											"end": 11677,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 11638,
											"end": 11654,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 11638,
											"end": 11654,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11633,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 11620,
											"end": 11637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 11620,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 11620,
											"end": 11659,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 11620,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11602,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11586,
											"end": 11602,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 11586,
											"end": 11606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 11586,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11583,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11567,
											"end": 11688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11688,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11567,
											"end": 11688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11716,
											"end": 11728,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11698,
											"end": 11728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11698,
											"end": 11728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11698,
											"end": 11728,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11698,
											"end": 11728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11735,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2493,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2509,
											"end": 2517,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2483,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2551,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2555,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2583,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH data",
											"source": 2,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2565,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2647,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3193,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3232,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3239,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1420,
											"end": 1421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1406,
											"end": 1456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 837,
											"end": 1076,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 837,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1024,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1024,
											"end": 1047,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 949,
											"end": 1069,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1069,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 949,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 837,
											"end": 1076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 837,
											"end": 1076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 837,
											"end": 1076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 837,
											"end": 1076,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 971,
											"end": 972,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 971,
											"end": 976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 994,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 986,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 882,
											"end": 1058,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1295,
											"end": 1322,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1295,
											"end": 1322,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1295,
											"end": 1322,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1339,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1220,
											"end": 1350,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1220,
											"end": 1350,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1220,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1357,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12001,
											"end": 12008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12035,
											"end": 12048,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12035,
											"end": 12048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12028,
											"end": 12031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12028,
											"end": 12048,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12024,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12024,
											"end": 12225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 12079,
											"end": 12084,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12074,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 12071,
											"end": 12078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 12071,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12064,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 12064,
											"end": 12085,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12024,
											"end": 12225,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12024,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12115,
											"end": 12128,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12106,
											"end": 12111,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12106,
											"end": 12128,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12102,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12102,
											"end": 12225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12144,
											"end": 12152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12144,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 12144,
											"end": 12152,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12102,
											"end": 12225,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 12102,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 12208,
											"end": 12213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12203,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12190,
											"end": 12203,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 12190,
											"end": 12207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 12190,
											"end": 12214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12183,
											"end": 12214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12183,
											"end": 12214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11902,
											"end": 12231,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3834,
											"end": 3839,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3985,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3721,
											"end": 3993,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1873,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1910,
											"end": 1915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1941,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3564,
											"end": 4407,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3564,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4009,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4143,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4147,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4401,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4122,
											"end": 4401,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH data",
											"source": 7,
											"value": "21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4259,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4401,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4122,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 4407,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1117,
											"end": 1132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6226,
											"end": 6238,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6254,
											"end": 6261,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6830,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6250,
											"end": 6830,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6284,
											"end": 6294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6830,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6250,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6416,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6395,
											"end": 6412,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6395,
											"end": 6416,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 6820,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6391,
											"end": 6820,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6653,
											"end": 6663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6664,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6713,
											"end": 6728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6710,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6692,
											"end": 6711,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6729,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6602,
											"end": 6747,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6602,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6792,
											"end": 6804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6805,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6111,
											"end": 6836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"21C3364D55537BF20EB8F05374E9F53F47299E1883C412F1F1135F398F2C2082": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"55E8B512461165150226D7FB62AF16288A660C0FC1F35821BA4AD8AD658A0BB0": "4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"8DDAF6510EFEC06EAA5007F0744244862092545BC763E566E2661C53C8FF3A7E": "4e6577207374617274426c6f636b206d75737420626520686967686572207468616e2063757272656e7420626c6f636b",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"GenericStakeFactory()": "514f4a42",
							"PRECISION_FACTOR()": "ccd34cd5",
							"accTokenPerShare()": "8f662915",
							"availableRewards()": "879d9090",
							"bonusEndBlock()": "1aed6553",
							"deposit(uint256)": "b6b55f25",
							"emergencyRewardWithdraw(uint256)": "3279beab",
							"emergencyWithdraw()": "db2e21bc",
							"hasUserLimit()": "92e8990e",
							"initialize(address,address,uint256,uint256,uint256,uint256,address)": "83a5041c",
							"isInitialized()": "392e53cd",
							"lastRewardBlock()": "a9f8d181",
							"owner()": "8da5cb5b",
							"pendingReward(address)": "f40f0f52",
							"poolLimitPerUser()": "66fe9f8a",
							"recoverWrongTokens(address,uint256)": "3f138d4b",
							"renounceOwnership()": "715018a6",
							"rewardPerBlock()": "8ae39cac",
							"rewardToken()": "f7c618c1",
							"stakedByUsers()": "f36cc893",
							"stakedToken()": "cc7a262e",
							"startBlock()": "48cd4cb1",
							"stopReward()": "80dc0672",
							"totalWKDStaked()": "2de68155",
							"transferOwnership(address)": "f2fde38b",
							"updatePoolLimitPerUser(bool,uint256)": "a0b40905",
							"updateRewardPerBlock(uint256)": "01f8a976",
							"updateStartAndEndBlocks(uint256,uint256)": "9513997f",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenRecovered\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AdminTokenRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolLimitPerUser\",\"type\":\"uint256\"}],\"name\":\"NewPoolLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"NewRewardPerBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"NewStartAndEndBlocks\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"RewardsStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GenericStakeFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accTokenPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRewardWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasUserLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"_stakedToken\",\"type\":\"address\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_poolLimitPerUser\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLimitPerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverWrongTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedByUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWKDStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_hasUserLimit\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_poolLimitPerUser\",\"type\":\"uint256\"}],\"name\":\"updatePoolLimitPerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"updateRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"name\":\"updateStartAndEndBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverWrongTokens(address,uint256)\":{\"details\":\"This function is only callable by admin.\",\"params\":{\"_tokenAddress\":\": the address of the token to withdraw\",\"_tokenAmount\":\": the number of tokens to withdraw\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateStartAndEndBlocks(uint256,uint256)\":{\"details\":\"This function is only callable by owner.\",\"params\":{\"_bonusEndBlock\":\": the new end block\",\"_startBlock\":\": the new start block\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverWrongTokens(address,uint256)\":{\"notice\":\"It allows the admin to recover wrong tokens sent to the contract\"},\"updateStartAndEndBlocks(uint256,uint256)\":{\"notice\":\"It allows the admin to update start and end blocks\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/farm/GenericStake.sol\":\"WakandaPoolInitializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]},\"src/farm/GenericStake.sol\":{\"keccak256\":\"0x507f2a78315bc3843147b62fc51301af83874ca50be3b438856e02c6b1340d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f00f7228f5a8ec090a8a0f27124dbe9c4bd8389b698073df3f3da466f9669069\",\"dweb:/ipfs/QmQfeoDqJmVfnufCAJmSrf3YCQEHrwamncEerbvfgjFL6g\"]},\"src/helpers/IBEP20.sol\":{\"keccak256\":\"0x2ff96cad5c44c9cfbe8ff21dead544ac037a32218543e2a28f0dcdf0beb72707\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda8b87ed06d8d25560e2d4f3f06cef6b6b63348be0a05a2ce4974a2f99b0379\",\"dweb:/ipfs/QmPz73WzsthfmLTBfzN1s2bk3oJwQ529ev3YJbhmHnXspk\"]},\"src/helpers/SafeBEP20.sol\":{\"keccak256\":\"0xc9cfa83f43d904e7847859188105b79104b18aca0c8e3f6de2c55bfafefb3f62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90c974d3f1185ed19052783c004188ca4a2284e493656e1d146d57df86c5b551\",\"dweb:/ipfs/QmQCddyBHgcFBYWwVJRPMz9kAj4ArdqCn4dUdzMMdtCvJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 30,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 582,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 630,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "GenericStakeFactory",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 632,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "hasUserLimit",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 634,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "isInitialized",
								"offset": 21,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 636,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "accTokenPerShare",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 638,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "stakedByUsers",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 640,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "bonusEndBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 642,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "startBlock",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 644,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "lastRewardBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 646,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "poolLimitPerUser",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 648,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "rewardPerBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 650,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "PRECISION_FACTOR",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 652,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "rewardToken",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IBEP20)1593"
							},
							{
								"astId": 654,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "stakedToken",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IBEP20)1593"
							},
							{
								"astId": 658,
								"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
								"label": "userInfo",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_struct(UserInfo)663_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)1593": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)663_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct WakandaPoolInitializable.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)663_storage"
							},
							"t_struct(UserInfo)663_storage": {
								"encoding": "inplace",
								"label": "struct WakandaPoolInitializable.UserInfo",
								"members": [
									{
										"astId": 660,
										"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 662,
										"contract": "src/farm/GenericStake.sol:WakandaPoolInitializable",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"recoverWrongTokens(address,uint256)": {
								"notice": "It allows the admin to recover wrong tokens sent to the contract"
							},
							"updateStartAndEndBlocks(uint256,uint256)": {
								"notice": "It allows the admin to update start and end blocks"
							}
						},
						"version": 1
					}
				}
			},
			"src/helpers/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/helpers/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/helpers/IBEP20.sol\":{\"keccak256\":\"0x2ff96cad5c44c9cfbe8ff21dead544ac037a32218543e2a28f0dcdf0beb72707\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda8b87ed06d8d25560e2d4f3f06cef6b6b63348be0a05a2ce4974a2f99b0379\",\"dweb:/ipfs/QmPz73WzsthfmLTBfzN1s2bk3oJwQ529ev3YJbhmHnXspk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/helpers/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeBEP20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/helpers/SafeBEP20.sol\":749:4409  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/helpers/SafeBEP20.sol\":749:4409  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202354255996aa3fd0da70819011f636e3424ca6d9724fe48af1d1c9e7d1f41dd764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202354255996aa3fd0da70819011f636e3424ca6d9724fe48af1d1c9e7d1f41dd764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 SLOAD 0x25 MSIZE SWAP7 0xAA EXTCODEHASH 0xD0 0xDA PUSH17 0x819011F636E3424CA6D9724FE48AF1D1C9 0xE7 0xD1 DELEGATECALL SAR 0xD7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "749:3660:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202354255996aa3fd0da70819011f636e3424ca6d9724fe48af1d1c9e7d1f41dd764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 SLOAD 0x25 MSIZE SWAP7 0xAA EXTCODEHASH 0xD0 0xDA PUSH17 0x819011F636E3424CA6D9724FE48AF1D1C9 0xE7 0xD1 DELEGATECALL SAR 0xD7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "749:3660:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 4409,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202354255996aa3fd0da70819011f636e3424ca6d9724fe48af1d1c9e7d1f41dd764736f6c634300060c0033",
									".code": [
										{
											"begin": 749,
											"end": 4409,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 749,
											"end": 4409,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/helpers/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"src/helpers/IBEP20.sol\":{\"keccak256\":\"0x2ff96cad5c44c9cfbe8ff21dead544ac037a32218543e2a28f0dcdf0beb72707\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cda8b87ed06d8d25560e2d4f3f06cef6b6b63348be0a05a2ce4974a2f99b0379\",\"dweb:/ipfs/QmPz73WzsthfmLTBfzN1s2bk3oJwQ529ev3YJbhmHnXspk\"]},\"src/helpers/SafeBEP20.sol\":{\"keccak256\":\"0xc9cfa83f43d904e7847859188105b79104b18aca0c8e3f6de2c55bfafefb3f62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90c974d3f1185ed19052783c004188ca4a2284e493656e1d146d57df86c5b551\",\"dweb:/ipfs/QmQCddyBHgcFBYWwVJRPMz9kAj4ArdqCn4dUdzMMdtCvJL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "668:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "678:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:0"
									},
									"scope": 22,
									"src": "598:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "773:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "783:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "916:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "759:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:0"
									},
									"scope": 22,
									"src": "708:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "566:374:0"
						}
					],
					"src": "33:908:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 23,
							"src": "66:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 27,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "619:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "619:7:1"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "95:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								22
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 131,
									"src": "633:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 36,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "689:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "720:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "688:57:1"
									},
									"src": "662:84:1"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "872:135:1",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 57,
														"src": "882:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "882:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 42,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "902:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "882:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 45,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "924:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "933:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "924:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "924:18:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "986:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "978:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 50,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "978:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 54,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "990:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "957:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "957:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "EmitStatement",
												"src": "952:48:1"
											}
										]
									},
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "752:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 58,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:0:1"
									},
									"scope": 131,
									"src": "848:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1130:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1147:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1140:13:1"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1013:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "1121:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1120:9:1"
									},
									"scope": 131,
									"src": "1083:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1269:95:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "1287:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1297:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1287:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1311:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1279:67:1"
											},
											{
												"id": 78,
												"nodeType": "PlaceholderStatement",
												"src": "1356:1:1"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1166:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 80,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1266:2:1"
									},
									"src": "1248:116:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1760:91:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1796:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1812:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1804:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 88,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1804:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1804:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 86,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1775:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "EmitStatement",
												"src": "1770:45:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1825:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1842:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1834:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 95,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1834:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1834:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1825:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1825:19:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1370:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 84,
											"modifierName": {
												"argumentTypes": null,
												"id": 83,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "1750:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1750:9:1"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:2:1"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:1"
									},
									"scope": 131,
									"src": "1706:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2070:170:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2088:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2108:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2100:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2100:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2100:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2088:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2112:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2080:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2080:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2080:73:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 121,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2189:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2197:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2168:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "2163:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 125,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2216:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2225:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2216:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2216:17:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1857:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 108,
											"modifierName": {
												"argumentTypes": null,
												"id": 107,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "2060:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2060:9:1"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "2027:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2026:18:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:0:1"
									},
									"scope": 131,
									"src": "2000:240:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 132,
							"src": "590:1652:1"
						}
					],
					"src": "33:2210:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							327
						]
					},
					"id": 328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "949:109:2",
										"statements": [
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 159,
														"src": "959:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "959:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "971:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "975:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "971:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "959:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 151,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "994:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "999:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "994:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1002:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "986:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "986:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "986:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 157,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "1050:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 143,
												"id": 158,
												"nodeType": "Return",
												"src": "1043:8:2"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "653:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "895:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "906:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "894:22:2"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 160,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 327,
									"src": "882:176:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1396:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 171,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "1417:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 172,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1420:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1423:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 170,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															205
														],
														"referencedDeclaration": 205,
														"src": "1413:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "1406:50:2"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1064:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "1342:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "1353:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1341:22:2"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "1387:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1386:9:2"
									},
									"scope": 327,
									"src": "1329:134:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1849:92:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1867:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 191,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1872:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1867:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 193,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "1875:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1859:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1859:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1859:29:2"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 204,
														"src": "1898:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1898:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "1914:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1910:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1898:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 202,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "1933:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 203,
												"nodeType": "Return",
												"src": "1926:8:2"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1469:280:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "1767:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "1778:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "1789:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1789:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1766:50:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 205,
												"src": "1840:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1839:9:2"
									},
									"scope": 327,
									"src": "1754:187:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2255:392:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2487:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 221,
												"nodeType": "IfStatement",
												"src": "2483:45:2",
												"trueBody": {
													"id": 220,
													"nodeType": "Block",
													"src": "2495:33:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2516:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 214,
															"id": 219,
															"nodeType": "Return",
															"src": "2509:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 239,
														"src": "2538:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2538:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2550:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "2554:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2550:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2538:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 229,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "2573:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 230,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "2577:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2573:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 232,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "2582:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2573:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2565:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "2565:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 237,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "2639:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 238,
												"nodeType": "Return",
												"src": "2632:8:2"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1947:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "2201:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "2212:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:22:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "2246:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2245:9:2"
									},
									"scope": 327,
									"src": "2188:459:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "3176:63:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 251,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "3197:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 252,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "3200:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3203:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 250,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															285
														],
														"referencedDeclaration": 285,
														"src": "3193:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3193:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 255,
												"nodeType": "Return",
												"src": "3186:46:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "2653:451:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "3122:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "3133:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3121:22:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "3167:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3166:9:2"
									},
									"scope": 327,
									"src": "3109:130:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "3816:177:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "3834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3838:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3834:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 273,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3841:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3826:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3826:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "3826:28:2"
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 284,
														"src": "3864:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3864:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3876:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "3880:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3876:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3864:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 282,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 277,
													"src": "3985:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 283,
												"nodeType": "Return",
												"src": "3978:8:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3245:471:2",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 285,
												"src": "3734:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 285,
												"src": "3745:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 285,
												"src": "3756:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3756:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3733:50:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 285,
												"src": "3807:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3806:9:2"
									},
									"scope": 327,
									"src": "3721:272:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4511:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 296,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4532:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4535:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4538:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 295,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															302,
															326
														],
														"referencedDeclaration": 326,
														"src": "4528:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4528:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 300,
												"nodeType": "Return",
												"src": "4521:44:2"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "3999:440:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "4457:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "4468:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4456:22:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 302,
												"src": "4502:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4501:9:2"
									},
									"scope": 327,
									"src": "4444:128:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "5138:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 315,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "5156:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5161:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5156:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 318,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5164:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "5148:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 321,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "5194:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 322,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "5198:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5194:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 324,
												"nodeType": "Return",
												"src": "5187:12:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4578:460:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "5056:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5056:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "5067:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5067:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "5078:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5078:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5055:50:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 326,
												"src": "5129:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5128:9:2"
									},
									"scope": 327,
									"src": "5043:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 328,
							"src": "630:4578:2"
						}
					],
					"src": "33:5176:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							571
						]
					},
					"id": 572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 329,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 330,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 571,
							"linearizedBaseContracts": [
								571
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "792:347:3",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 346,
														"src": "989:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 333,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:3",
														"valueSize": 1
													},
													{
														"declaration": 339,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:3",
														"valueSize": 1
													}
												],
												"id": 341,
												"nodeType": "InlineAssembly",
												"src": "1067:41:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1124:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 337,
												"id": 345,
												"nodeType": "Return",
												"src": "1117:15:3"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "746:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "786:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:3"
									},
									"scope": 571,
									"src": "726:413:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2127:320:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 358,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$571",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$571",
																				"typeString": "library Address"
																			}
																		],
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 356,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 361,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2170:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:3"
											},
											{
												"assignments": [
													367,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 380,
														"src": "2299:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 366,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 374,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 368,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2317:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 370,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2340:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "2370:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:3"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "2075:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "2102:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:3"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:3"
									},
									"scope": 571,
									"src": "2056:391:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "3277:82:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 392,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3305:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 393,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "3313:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 391,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															398,
															418
														],
														"referencedDeclaration": 418,
														"src": "3292:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "3285:67:3"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "3210:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "3226:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:3"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "3263:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:3"
									},
									"scope": 571,
									"src": "3188:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3698:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 411,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "3737:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3745:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 414,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3754:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 410,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															438,
															488
														],
														"referencedDeclaration": 488,
														"src": "3715:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 409,
												"id": 416,
												"nodeType": "Return",
												"src": "3708:59:3"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "3603:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "3619:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "3638:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:3"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "3684:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:3"
									},
									"scope": 571,
									"src": "3581:193:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "4249:111:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 431,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4288:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4296:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 433,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 430,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															438,
															488
														],
														"referencedDeclaration": 488,
														"src": "4266:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 429,
												"id": 436,
												"nodeType": "Return",
												"src": "4259:94:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "4167:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "4183:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "4202:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:3"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "4235:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:3"
									},
									"scope": 571,
									"src": "4136:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "4749:382:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 455,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$571",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$571",
																				"typeString": "library Address"
																			}
																		],
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 453,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 458,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "4792:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 465,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "4869:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 464,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4858:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:3"
											},
											{
												"assignments": [
													471,
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 487,
														"src": "4981:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 470,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 487,
														"src": "4995:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "5050:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 474,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "5022:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 476,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5042:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 482,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5090:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 483,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5099:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 484,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "5111:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 481,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "5072:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 486,
												"nodeType": "Return",
												"src": "5065:59:3"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "4639:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "4655:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "4674:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "4689:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "4735:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:3"
									},
									"scope": 571,
									"src": "4608:523:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5408:97:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 499,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 500,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5452:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 498,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															505,
															540
														],
														"referencedDeclaration": 540,
														"src": "5425:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 497,
												"id": 503,
												"nodeType": "Return",
												"src": "5418:80:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "5336:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "5352:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "5394:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:3"
									},
									"scope": 571,
									"src": "5308:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "5817:288:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 519,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "5846:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 518,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "5835:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:3"
											},
											{
												"assignments": [
													525,
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 539,
														"src": "5965:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 524,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 539,
														"src": "5979:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 526,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 530,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "6024:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6006:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 534,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6064:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 535,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6073:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "6085:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 533,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "6046:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 516,
												"id": 538,
												"nodeType": "Return",
												"src": "6039:59:3"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "5717:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "5733:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "5752:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "5803:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:3"
									},
									"scope": 571,
									"src": "5689:416:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6240:596:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 551,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "6254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "6311:519:3",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 555,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "6395:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6395:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6415:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6395:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6767:53:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 562,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "6792:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 561,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6785:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6785:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "ExpressionStatement",
																		"src": "6785:20:3"
																	}
																]
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6391:429:3",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6418:343:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6602:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6624:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6653:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6647:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6647:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6628:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6696:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6700:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6692:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6692:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6713:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6685:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6685:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6685:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 544,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6653:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 544,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6700:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 559,
																		"nodeType": "InlineAssembly",
																		"src": "6593:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6250:580:3",
												"trueBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "6263:42:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 552,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "6284:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 550,
															"id": 553,
															"nodeType": "Return",
															"src": "6277:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "6138:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6138:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "6152:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "6177:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6177:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6137:67:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 570,
												"src": "6226:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6225:14:3"
									},
									"scope": 571,
									"src": "6111:725:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 572,
							"src": "134:6704:3"
						}
					],
					"src": "33:6806:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							611
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 573,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 574,
								"nodeType": "StructuredDocumentation",
								"src": "66:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 577,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 611,
									"src": "1605:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 575,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1605:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1645:1:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 580,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 611,
									"src": "1652:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1688:1:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 582,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 611,
									"src": "1696:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1696:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1750:39:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 585,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "1760:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 586,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "1770:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1760:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "1760:22:4"
											}
										]
									},
									"documentation": null,
									"id": 590,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:4"
									},
									"scope": 611,
									"src": "1726:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "2188:421:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 594,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "2277:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 595,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "2288:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2277:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2269:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2269:63:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 600,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "2407:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 601,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "2417:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "2407:18:4"
											},
											{
												"id": 604,
												"nodeType": "PlaceholderStatement",
												"src": "2436:1:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 605,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "2580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 606,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "2590:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "2580:22:4"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1795:364:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 610,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:4"
									},
									"src": "2164:445:4",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 612,
							"src": "817:1794:4"
						}
					],
					"src": "33:2579:4"
				},
				"id": 4
			},
			"src/farm/GenericStake.sol": {
				"ast": {
					"absolutePath": "src/farm/GenericStake.sol",
					"exportedSymbols": {
						"WakandaPoolInitializable": [
							1492
						]
					},
					"id": 1493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 613,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/access/Ownable.sol",
							"id": 614,
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 132,
							"src": "58:106:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol",
							"id": 615,
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 328,
							"src": "165:104:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/ReentrancyGuard.sol",
							"id": 616,
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 612,
							"src": "270:112:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/helpers/IBEP20.sol",
							"file": "../helpers/IBEP20.sol",
							"id": 617,
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 1594,
							"src": "384:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/helpers/SafeBEP20.sol",
							"file": "../helpers/SafeBEP20.sol",
							"id": 618,
							"nodeType": "ImportDirective",
							"scope": 1493,
							"sourceUnit": 1806,
							"src": "416:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 619,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 131,
										"src": "489:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$131",
											"typeString": "contract Ownable"
										}
									},
									"id": 620,
									"nodeType": "InheritanceSpecifier",
									"src": "489:7:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 621,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 611,
										"src": "498:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$611",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 622,
									"nodeType": "InheritanceSpecifier",
									"src": "498:15:5"
								}
							],
							"contractDependencies": [
								22,
								131,
								611
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1492,
							"linearizedBaseContracts": [
								1492,
								611,
								131,
								22
							],
							"name": "WakandaPoolInitializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 625,
									"libraryName": {
										"contractScope": null,
										"id": 623,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 327,
										"src": "526:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$327",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "520:27:5",
									"typeName": {
										"id": 624,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "539:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 628,
									"libraryName": {
										"contractScope": null,
										"id": 626,
										"name": "SafeBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1805,
										"src": "558:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeBEP20_$1805",
											"typeString": "library SafeBEP20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "552:27:5",
									"typeName": {
										"contractScope": null,
										"id": 627,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1593,
										"src": "572:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1593",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "514f4a42",
									"id": 630,
									"mutability": "mutable",
									"name": "GenericStakeFactory",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "633:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 629,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "92e8990e",
									"id": 632,
									"mutability": "mutable",
									"name": "hasUserLimit",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "714:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 631,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "714:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "392e53cd",
									"id": 634,
									"mutability": "mutable",
									"name": "isInitialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "778:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 633,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "778:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f662915",
									"id": 636,
									"mutability": "mutable",
									"name": "accTokenPerShare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "841:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 635,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "841:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f36cc893",
									"id": 638,
									"mutability": "mutable",
									"name": "stakedByUsers",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "878:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "878:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1aed6553",
									"id": 640,
									"mutability": "mutable",
									"name": "bonusEndBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "959:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 639,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "959:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 642,
									"mutability": "mutable",
									"name": "startBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1042:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 641,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1042:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9f8d181",
									"id": 644,
									"mutability": "mutable",
									"name": "lastRewardBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1122:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 643,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1122:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66fe9f8a",
									"id": 646,
									"mutability": "mutable",
									"name": "poolLimitPerUser",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1193:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 645,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1193:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ae39cac",
									"id": 648,
									"mutability": "mutable",
									"name": "rewardPerBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1268:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 647,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1268:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ccd34cd5",
									"id": 650,
									"mutability": "mutable",
									"name": "PRECISION_FACTOR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1332:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1332:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 652,
									"mutability": "mutable",
									"name": "rewardToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1394:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$1593",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 651,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1593,
										"src": "1394:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1593",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc7a262e",
									"id": 654,
									"mutability": "mutable",
									"name": "stakedToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1450:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$1593",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"contractScope": null,
										"id": 653,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1593,
										"src": "1450:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1593",
											"typeString": "contract IBEP20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 658,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1492,
									"src": "1540:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$663_storage_$",
										"typeString": "mapping(address => struct WakandaPoolInitializable.UserInfo)"
									},
									"typeName": {
										"id": 657,
										"keyType": {
											"id": 655,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$663_storage_$",
											"typeString": "mapping(address => struct WakandaPoolInitializable.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 656,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 663,
											"src": "1559:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
												"typeString": "struct WakandaPoolInitializable.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "WakandaPoolInitializable.UserInfo",
									"id": 663,
									"members": [
										{
											"constant": false,
											"id": 660,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 663,
											"src": "1617:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 659,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1617:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 663,
											"src": "1689:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 661,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1689:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1492,
									"src": "1591:138:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 669,
									"name": "AdminTokenRecovery",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenRecovered",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "1760:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 669,
												"src": "1784:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1759:40:5"
									},
									"src": "1735:65:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 675,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 675,
												"src": "1819:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 675,
												"src": "1841:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1818:38:5"
									},
									"src": "1805:52:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 681,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "1886:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "1908:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1885:38:5"
									},
									"src": "1862:62:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 687,
									"name": "NewStartAndEndBlocks",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 687,
												"src": "1956:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "endBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 687,
												"src": "1976:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1955:38:5"
									},
									"src": "1929:65:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 691,
									"name": "NewRewardPerBlock",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "2023:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2022:24:5"
									},
									"src": "1999:48:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 695,
									"name": "NewPoolLimit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolLimitPerUser",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 695,
												"src": "2071:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2070:26:5"
									},
									"src": "2052:45:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 699,
									"name": "RewardsStop",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "2120:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2119:21:5"
									},
									"src": "2102:39:5"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 705,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "2161:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 705,
												"src": "2183:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2160:38:5"
									},
									"src": "2146:53:5"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "2226:49:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 708,
														"name": "GenericStakeFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2236:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 709,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2258:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2258:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2236:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2236:32:5"
											}
										]
									},
									"documentation": null,
									"id": 714,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:5"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:5"
									},
									"scope": 1492,
									"src": "2205:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "2959:958:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2977:14:5",
															"subExpression": {
																"argumentTypes": null,
																"id": 732,
																"name": "isInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "2978:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2993:21:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2969:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2969:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "2969:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 738,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3033:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3033:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 740,
																"name": "GenericStakeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "3047:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3033:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420666163746f7279",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3068:13:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eda39b5e8597dcf0954dda16fae31bbeaeff5579c9e9c1dfa649a78790406276",
																"typeString": "literal_string \"Not factory\""
															},
															"value": "Not factory"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eda39b5e8597dcf0954dda16fae31bbeaeff5579c9e9c1dfa649a78790406276",
																"typeString": "literal_string \"Not factory\""
															}
														],
														"id": 737,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3025:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3025:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "3025:57:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 745,
														"name": "isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3135:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3151:4:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3135:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "3135:20:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 749,
														"name": "stakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3166:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1593",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 750,
														"name": "_stakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "3180:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1593",
															"typeString": "contract IBEP20"
														}
													},
													"src": "3166:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "3166:26:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 753,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "3202:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1593",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 754,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3216:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1593",
															"typeString": "contract IBEP20"
														}
													},
													"src": "3202:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "3202:26:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 757,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "3238:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 758,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "3255:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3238:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "3238:32:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 761,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "3280:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 762,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "3293:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3280:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "3280:24:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 765,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3314:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 766,
														"name": "_bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3330:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3314:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "3314:30:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 769,
														"name": "_poolLimitPerUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "3359:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3379:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3359:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 781,
												"nodeType": "IfStatement",
												"src": "3355:121:5",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "3382:94:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 772,
																	"name": "hasUserLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "3396:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3411:4:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3396:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 775,
															"nodeType": "ExpressionStatement",
															"src": "3396:19:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 776,
																	"name": "poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "3429:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 777,
																	"name": "_poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "3448:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3429:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "3429:36:5"
														}
													]
												}
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "decimalsRewardToken",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 822,
														"src": "3486:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3486:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 790,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "3524:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1593",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "decimals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1506,
																"src": "3524:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																	"typeString": "function () view external returns (uint8)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3524:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3516:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3516:7:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3516:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3486:61:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 792,
																"name": "decimalsRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "3565:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3330",
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3587:2:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "3565:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d75737420626520696e666572696f7220746f203330",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3591:24:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fdf049a4f34fca2b5f20dd0fb49af89413ed6cdc2c22f4b883c953b5dec74326",
																"typeString": "literal_string \"Must be inferior to 30\""
															},
															"value": "Must be inferior to 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fdf049a4f34fca2b5f20dd0fb49af89413ed6cdc2c22f4b883c953b5dec74326",
																"typeString": "literal_string \"Must be inferior to 30\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3557:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "3557:59:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 798,
														"name": "PRECISION_FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "3627:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3654:2:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 807,
																					"name": "decimalsRewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "3675:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "3330",
																							"id": 804,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3667:2:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_30_by_1",
																								"typeString": "int_const 30"
																							},
																							"value": "30"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_30_by_1",
																								"typeString": "int_const 30"
																							}
																						],
																						"id": 803,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3659:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 802,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "3659:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3659:11:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "3659:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3659:36:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 809,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3658:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3654:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3646:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 799,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3646:7:5",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3646:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:70:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "3627:70:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 814,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "3761:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 815,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "3779:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3761:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "3761:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "_admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "3903:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 818,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "3885:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3885:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "3885:25:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "83a5041c",
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "_stakedToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2742:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 715,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "2742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2771:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 717,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "2771:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2800:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2800:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2833:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "_bonusEndBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2862:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "_poolLimitPerUser",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2894:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2894:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 823,
												"src": "2929:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2732:217:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2959:0:5"
									},
									"scope": 1492,
									"src": "2713:1204:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "4125:1022:5",
										"statements": [
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 944,
														"src": "4135:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
															"typeString": "struct WakandaPoolInitializable.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 830,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 663,
															"src": "4135:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 832,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "4159:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$663_storage_$",
															"typeString": "mapping(address => struct WakandaPoolInitializable.UserInfo storage ref)"
														}
													},
													"id": 835,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 833,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "4168:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4168:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4159:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$663_storage",
														"typeString": "struct WakandaPoolInitializable.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4135:44:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 837,
													"name": "hasUserLimit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "4194:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 850,
												"nodeType": "IfStatement",
												"src": "4190:169:5",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "4208:151:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 841,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 831,
																						"src": "4259:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																							"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																						}
																					},
																					"id": 842,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 660,
																					"src": "4259:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 839,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 825,
																					"src": "4247:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 160,
																				"src": "4247:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4247:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 844,
																			"name": "poolLimitPerUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "4275:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4247:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5573657220616d6f756e742061626f7665206c696d6974",
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4309:25:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bac6ed3deac9fc0643f24ef95c70fb352709430e7d0f9f60d03afc350f4dc8f5",
																			"typeString": "literal_string \"User amount above limit\""
																		},
																		"value": "User amount above limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bac6ed3deac9fc0643f24ef95c70fb352709430e7d0f9f60d03afc350f4dc8f5",
																			"typeString": "literal_string \"User amount above limit\""
																		}
																	],
																	"id": 838,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "4222:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4222:126:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "4222:126:5"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 851,
														"name": "stakedByUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "4368:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 852,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4385:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4368:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "4368:24:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 855,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "4403:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4403:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "4403:13:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 858,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "4431:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 660,
														"src": "4431:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4445:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4431:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 894,
												"nodeType": "IfStatement",
												"src": "4427:325:5",
												"trueBody": {
													"id": 893,
													"nodeType": "Block",
													"src": "4448:304:5",
													"statements": [
														{
															"assignments": [
																863
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 863,
																	"mutability": "mutable",
																	"name": "pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 893,
																	"src": "4462:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 862,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4462:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 876,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 873,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 831,
																			"src": "4608:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																				"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 662,
																		"src": "4608:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 870,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "4569:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 867,
																						"name": "accTokenPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 636,
																						"src": "4530:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 864,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 831,
																							"src": "4480:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																								"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																							}
																						},
																						"id": 865,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 660,
																						"src": "4480:28:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 866,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 240,
																					"src": "4480:49:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4480:67:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 257,
																			"src": "4480:88:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4480:106:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 177,
																	"src": "4480:127:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4480:144:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4462:162:5"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 877,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "4642:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4652:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4642:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 892,
															"nodeType": "IfStatement",
															"src": "4638:104:5",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "4655:87:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 885,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -15,
																								"src": "4706:3:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 886,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "4706:10:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						],
																						"id": 884,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4698:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 883,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4698:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 887,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4698:19:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 888,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "4719:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 880,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "4673:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$1593",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1627,
																				"src": "4673:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
																					"typeString": "function (contract IBEP20,address,uint256)"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4673:54:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 890,
																		"nodeType": "ExpressionStatement",
																		"src": "4673:54:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 895,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4766:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4776:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4766:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 924,
												"nodeType": "IfStatement",
												"src": "4762:229:5",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "4779:212:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 898,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "4793:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																			"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 660,
																	"src": "4793:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 904,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "4823:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 901,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 831,
																				"src": "4807:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																					"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																				}
																			},
																			"id": 902,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 660,
																			"src": "4807:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 160,
																		"src": "4807:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4807:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4793:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "4793:38:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 913,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "4899:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4899:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4891:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 911,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4891:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4891:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 918,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "4936:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_WakandaPoolInitializable_$1492",
																					"typeString": "contract WakandaPoolInitializable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_WakandaPoolInitializable_$1492",
																					"typeString": "contract WakandaPoolInitializable"
																				}
																			],
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4928:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 916,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4928:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4928:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 920,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "4959:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 908,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "4845:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$1593",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1652,
																	"src": "4845:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
																		"typeString": "function (contract IBEP20,address,address,uint256)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4845:135:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 922,
															"nodeType": "ExpressionStatement",
															"src": "4845:135:5"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 925,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "5001:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 662,
														"src": "5001:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 934,
																"name": "PRECISION_FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5070:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 931,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5035:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 928,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 831,
																			"src": "5019:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																				"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 660,
																		"src": "5019:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 240,
																	"src": "5019:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5019:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "5019:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:77:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5001:95:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "5001:95:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5120:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5120:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 941,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "5132:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "5112:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5112:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "5107:33:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6b55f25",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 828,
											"modifierName": {
												"argumentTypes": null,
												"id": 827,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 610,
												"src": "4112:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4112:12:5"
										}
									],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "4086:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4085:17:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4125:0:5"
									},
									"scope": 1492,
									"src": "4069:1078:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "5348:763:5",
										"statements": [
											{
												"assignments": [
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1050,
														"src": "5358:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
															"typeString": "struct WakandaPoolInitializable.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 952,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 663,
															"src": "5358:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 954,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5382:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$663_storage_$",
															"typeString": "mapping(address => struct WakandaPoolInitializable.UserInfo storage ref)"
														}
													},
													"id": 957,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 955,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "5391:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5391:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5382:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$663_storage",
														"typeString": "struct WakandaPoolInitializable.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5358:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 960,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "5420:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																		"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "5420:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "5435:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5420:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416d6f756e7420746f20776974686472617720746f6f2068696768",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5444:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_becdbd9ec42ffdb26c601cdcc0a8e2f0256a7ba1ee5f6e3d26a33eb24a8bc859",
																"typeString": "literal_string \"Amount to withdraw too high\""
															},
															"value": "Amount to withdraw too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_becdbd9ec42ffdb26c601cdcc0a8e2f0256a7ba1ee5f6e3d26a33eb24a8bc859",
																"typeString": "literal_string \"Amount to withdraw too high\""
															}
														],
														"id": 959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5412:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5412:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "5412:62:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 967,
														"name": "stakedByUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "5484:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 968,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "5501:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5484:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "5484:24:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 971,
														"name": "_updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "5519:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "5519:13:5"
											},
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1050,
														"src": "5543:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5543:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 985,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "5673:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																	"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 662,
															"src": "5673:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 982,
																	"name": "PRECISION_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "5638:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 979,
																			"name": "accTokenPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "5603:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 976,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "5561:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																					"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																				}
																			},
																			"id": 977,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 660,
																			"src": "5561:24:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 240,
																		"src": "5561:41:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5561:59:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 257,
																"src": "5561:76:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5561:94:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "5561:111:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5561:128:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5543:146:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 989,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "5704:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5714:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5704:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "5700:148:5",
												"trueBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "5717:131:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 992,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "5731:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																			"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 660,
																	"src": "5731:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 998,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 947,
																			"src": "5761:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 995,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 953,
																				"src": "5745:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																					"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																				}
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 660,
																			"src": "5745:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "5745:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5745:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5731:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "5731:38:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1007,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "5816:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5816:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5808:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5808:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5808:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1010,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "5829:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1002,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "5783:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$1593",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1627,
																	"src": "5783:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5783:54:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1012,
															"nodeType": "ExpressionStatement",
															"src": "5783:54:5"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1015,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "5862:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5872:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5862:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "5858:96:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "5875:79:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1023,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "5922:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5922:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5914:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1021,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5914:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5914:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1026,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "5935:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1018,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5889:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$1593",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1627,
																	"src": "5889:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:54:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "ExpressionStatement",
															"src": "5889:54:5"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1031,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "5964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 662,
														"src": "5964:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1040,
																"name": "PRECISION_FACTOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "6033:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1037,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5998:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1034,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "5982:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																				"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 660,
																		"src": "5982:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 240,
																	"src": "5982:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5982:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "5982:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5982:77:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5964:95:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "5964:95:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1045,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6084:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6084:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "6096:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6075:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6075:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "6070:34:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 950,
											"modifierName": {
												"argumentTypes": null,
												"id": 949,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 610,
												"src": "5335:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5335:12:5"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1051,
												"src": "5309:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5308:17:5"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5348:0:5"
									},
									"scope": 1492,
									"src": "5291:820:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "6172:76:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1060,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "6219:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_WakandaPoolInitializable_$1492",
																			"typeString": "contract WakandaPoolInitializable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_WakandaPoolInitializable_$1492",
																			"typeString": "contract WakandaPoolInitializable"
																		}
																	],
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1058,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6211:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6211:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1056,
																"name": "stakedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "6189:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$1593",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1532,
															"src": "6189:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6189:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1063,
														"name": "stakedByUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "6228:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6189:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1065,
												"nodeType": "Return",
												"src": "6182:59:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "879d9090",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableRewards",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:2:5"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1067,
												"src": "6166:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6166:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6165:6:5"
									},
									"scope": 1492,
									"src": "6117:131:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "6434:392:5",
										"statements": [
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1123,
														"src": "6444:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
															"typeString": "struct WakandaPoolInitializable.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1072,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 663,
															"src": "6444:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1074,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "6468:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$663_storage_$",
															"typeString": "mapping(address => struct WakandaPoolInitializable.UserInfo storage ref)"
														}
													},
													"id": 1077,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1075,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "6477:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6477:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6468:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$663_storage",
														"typeString": "struct WakandaPoolInitializable.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6444:44:5"
											},
											{
												"assignments": [
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "amountToTransfer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1123,
														"src": "6498:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6498:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1083,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1081,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "6525:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
															"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 660,
													"src": "6525:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6498:38:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1084,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "6546:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 660,
														"src": "6546:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6560:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6546:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "6546:15:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1090,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "6571:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 662,
														"src": "6571:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6589:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6571:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "6571:19:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1096,
														"name": "amountToTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "6605:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6624:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6605:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1115,
												"nodeType": "IfStatement",
												"src": "6601:161:5",
												"trueBody": {
													"id": 1114,
													"nodeType": "Block",
													"src": "6627:135:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1104,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "6674:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "6674:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1102,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1107,
																		"name": "amountToTransfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "6687:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1099,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "6641:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$1593",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1627,
																	"src": "6641:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
																		"typeString": "function (contract IBEP20,address,uint256)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6641:63:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "6641:63:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1110,
																	"name": "stakedByUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6718:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1111,
																	"name": "amountToTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "6735:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6718:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1113,
															"nodeType": "ExpressionStatement",
															"src": "6718:33:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "6795:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6795:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1119,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "6807:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																	"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 660,
															"src": "6807:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "6777:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6777:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "EmitStatement",
												"src": "6772:47:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "db2e21bc",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1070,
											"modifierName": {
												"argumentTypes": null,
												"id": 1069,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 610,
												"src": "6421:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6421:12:5"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6409:2:5"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6434:0:5"
									},
									"scope": 1492,
									"src": "6383:443:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "7007:119:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1132,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "7025:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1133,
																	"name": "availableRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "7036:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7036:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7025:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7017:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7017:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "7017:38:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1143,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7098:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7098:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7090:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1141,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7090:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7090:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1146,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "7111:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1138,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "7065:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1627,
														"src": "7065:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "7065:54:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3279beab",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1129,
											"modifierName": {
												"argumentTypes": null,
												"id": 1128,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "6997:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6997:9:5"
										}
									],
									"name": "emergencyRewardWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1150,
												"src": "6971:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6970:17:5"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7007:0:5"
									},
									"scope": 1492,
									"src": "6938:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "7520:266:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1161,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "7551:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1164,
																		"name": "stakedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 654,
																		"src": "7576:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$1593",
																			"typeString": "contract IBEP20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IBEP20_$1593",
																			"typeString": "contract IBEP20"
																		}
																	],
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7568:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7568:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7568:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7551:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74206265207374616b656420746f6b656e",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7602:24:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b",
																"typeString": "literal_string \"Cannot be staked token\""
															},
															"value": "Cannot be staked token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2234c59bb9b24bd9eea0d80dd308fa837e87d8c6a3de9b68b0a40a73104da8b",
																"typeString": "literal_string \"Cannot be staked token\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7530:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7530:106:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "7530:106:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1176,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "7690:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7690:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7682:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1174,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7682:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7682:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1179,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "7703:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1171,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "7654:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1170,
																"name": "IBEP20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "7647:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBEP20_$1593_$",
																	"typeString": "type(contract IBEP20)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7647:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1627,
														"src": "7647:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$1593_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7647:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "7647:69:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1183,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "7751:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1184,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "7766:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1182,
														"name": "AdminTokenRecovery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "7732:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7732:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "EmitStatement",
												"src": "7727:52:5"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "7132:271:5",
										"text": " @notice It allows the admin to recover wrong tokens sent to the contract\n @param _tokenAddress: the address of the token to withdraw\n @param _tokenAmount: the number of tokens to withdraw\n @dev This function is only callable by admin."
									},
									"functionSelector": "3f138d4b",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1158,
											"modifierName": {
												"argumentTypes": null,
												"id": 1157,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "7506:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7506:9:5"
										}
									],
									"name": "recoverWrongTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1188,
												"src": "7436:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1188,
												"src": "7459:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7459:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7435:45:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7520:0:5"
									},
									"scope": 1492,
									"src": "7408:378:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "7911:45:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1193,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "7921:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1194,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7937:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7937:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7921:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "7921:28:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "80dc0672",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1191,
											"modifierName": {
												"argumentTypes": null,
												"id": 1190,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "7901:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7901:9:5"
										}
									],
									"name": "stopReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7889:2:5"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7911:0:5"
									},
									"scope": 1492,
									"src": "7870:86:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "8294:413:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1209,
															"name": "hasUserLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "8312:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d75737420626520736574",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8326:13:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92",
																"typeString": "literal_string \"Must be set\""
															},
															"value": "Must be set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d359e0630a0e50f510c3d55ac7e78402c8c17a210cbb7d33e871025c8bfed92",
																"typeString": "literal_string \"Must be set\""
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8304:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8304:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "8304:36:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1213,
													"name": "_hasUserLimit",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1201,
													"src": "8354:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1234,
													"nodeType": "Block",
													"src": "8569:87:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1226,
																	"name": "hasUserLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "8583:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1227,
																	"name": "_hasUserLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "8598:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8583:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "8583:28:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1230,
																	"name": "poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "8625:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8644:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8625:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1233,
															"nodeType": "ExpressionStatement",
															"src": "8625:20:5"
														}
													]
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "8350:306:5",
												"trueBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "8369:194:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1215,
																			"name": "_poolLimitPerUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "8408:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1216,
																			"name": "poolLimitPerUser",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "8428:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8408:36:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4e6577206c696d6974206d75737420626520686967686572",
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8462:26:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938",
																			"typeString": "literal_string \"New limit must be higher\""
																		},
																		"value": "New limit must be higher"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a50272db75196303ab05dd1527b8eedc85d0e0a35bbfb74ce5bb179db7dfc938",
																			"typeString": "literal_string \"New limit must be higher\""
																		}
																	],
																	"id": 1214,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "8383:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8383:119:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1220,
															"nodeType": "ExpressionStatement",
															"src": "8383:119:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1221,
																	"name": "poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "8516:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1222,
																	"name": "_poolLimitPerUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "8535:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8516:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "8516:36:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1237,
															"name": "poolLimitPerUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "8683:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1236,
														"name": "NewPoolLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "8670:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8670:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "8665:35:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a0b40905",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1206,
											"modifierName": {
												"argumentTypes": null,
												"id": 1205,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "8284:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8284:9:5"
										}
									],
									"name": "updatePoolLimitPerUser",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "_hasUserLimit",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1241,
												"src": "8215:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8215:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "_poolLimitPerUser",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1241,
												"src": "8243:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8243:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8205:69:5"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8294:0:5"
									},
									"scope": 1492,
									"src": "8174:533:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "8929:98:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1248,
														"name": "rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "8939:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1249,
														"name": "_rewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "8956:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8939:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "8939:32:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1253,
															"name": "_rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "9004:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "NewRewardPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "8986:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8986:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "EmitStatement",
												"src": "8981:39:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "01f8a976",
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1246,
											"modifierName": {
												"argumentTypes": null,
												"id": 1245,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "8919:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8919:9:5"
										}
									],
									"name": "updateRewardPerBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "_rewardPerBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1257,
												"src": "8885:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8885:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8884:25:5"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8929:0:5"
									},
									"scope": 1492,
									"src": "8855:172:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "9382:565:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1268,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "9400:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9400:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1270,
																"name": "startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "9415:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9400:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6f6c206861732073746172746564",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9427:18:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a",
																"typeString": "literal_string \"Pool has started\""
															},
															"value": "Pool has started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3064331463f63d46b77f5f0f10bf66b3e44d7211e89e334f395ddc2d5053297a",
																"typeString": "literal_string \"Pool has started\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9392:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9392:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "9392:54:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1276,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "9477:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1277,
																"name": "_bonusEndBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "9491:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9477:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6577207374617274426c6f636b206d757374206265206c6f776572207468616e206e657720656e64426c6f636b",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9519:48:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0",
																"typeString": "literal_string \"New startBlock must be lower than new endBlock\""
															},
															"value": "New startBlock must be lower than new endBlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55e8b512461165150226d7fb62af16288a660c0fc1f35821ba4ad8ad658a0bb0",
																"typeString": "literal_string \"New startBlock must be lower than new endBlock\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9456:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:121:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "9456:121:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1283,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "9608:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9608:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1285,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "9623:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9608:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6577207374617274426c6f636b206d75737420626520686967686572207468616e2063757272656e7420626c6f636b",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9648:50:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e",
																"typeString": "literal_string \"New startBlock must be higher than current block\""
															},
															"value": "New startBlock must be higher than current block"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ddaf6510efec06eaa5007f0744244862092545bc763e566e2661c53c8ff3a7e",
																"typeString": "literal_string \"New startBlock must be higher than current block\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9587:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9587:121:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "9587:121:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1290,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "9719:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1291,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "9732:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9719:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "9719:24:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1294,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "9753:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1295,
														"name": "_bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "9769:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9753:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "9753:30:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1298,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "9847:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1299,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "9865:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9847:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "9847:28:5"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1303,
															"name": "_startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "9912:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1304,
															"name": "_bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "9925:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1302,
														"name": "NewStartAndEndBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9891:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9891:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "EmitStatement",
												"src": "9886:54:5"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "9033:225:5",
										"text": " @notice It allows the admin to update start and end blocks\n @dev This function is only callable by owner.\n @param _startBlock: the new start block\n @param _bonusEndBlock: the new end block"
									},
									"functionSelector": "9513997f",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1265,
											"modifierName": {
												"argumentTypes": null,
												"id": 1264,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 80,
												"src": "9372:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9372:9:5"
										}
									],
									"name": "updateStartAndEndBlocks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1308,
												"src": "9305:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9305:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_bonusEndBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1308,
												"src": "9334:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9334:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9295:67:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9382:0:5"
									},
									"scope": 1492,
									"src": "9263:684:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "10183:863:5",
										"statements": [
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1390,
														"src": "10193:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
															"typeString": "struct WakandaPoolInitializable.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1315,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 663,
															"src": "10193:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																"typeString": "struct WakandaPoolInitializable.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1317,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "10217:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$663_storage_$",
															"typeString": "mapping(address => struct WakandaPoolInitializable.UserInfo storage ref)"
														}
													},
													"id": 1319,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1318,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "10226:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10217:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$663_storage",
														"typeString": "struct WakandaPoolInitializable.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10193:39:5"
											},
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "stakedTokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1390,
														"src": "10242:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1324,
												"initialValue": {
													"argumentTypes": null,
													"id": 1323,
													"name": "stakedByUsers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "10270:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10242:41:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1325,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "10297:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10297:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1327,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "10312:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10297:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1329,
															"name": "stakedTokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "10331:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10352:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10331:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10297:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1388,
													"nodeType": "Block",
													"src": "10878:162:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1384,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1316,
																			"src": "10996:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																				"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																			}
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 662,
																		"src": "10996:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1381,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "10953:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1378,
																						"name": "accTokenPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 636,
																						"src": "10931:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1375,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1316,
																							"src": "10915:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																								"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																							}
																						},
																						"id": 1376,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 660,
																						"src": "10915:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 240,
																					"src": "10915:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10915:33:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 257,
																			"src": "10915:37:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10915:55:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 177,
																	"src": "10915:59:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10915:114:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1314,
															"id": 1387,
															"nodeType": "Return",
															"src": "10892:137:5"
														}
													]
												},
												"id": 1389,
												"nodeType": "IfStatement",
												"src": "10293:747:5",
												"trueBody": {
													"id": 1374,
													"nodeType": "Block",
													"src": "10355:517:5",
													"statements": [
														{
															"assignments": [
																1334
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1334,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1374,
																	"src": "10369:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10369:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1340,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1336,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "10405:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1337,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "10422:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10422:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1335,
																	"name": "_getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "10390:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10390:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10369:66:5"
														},
														{
															"assignments": [
																1342
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1342,
																	"mutability": "mutable",
																	"name": "wakandaReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1374,
																	"src": "10449:21:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1341,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10449:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1347,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1345,
																		"name": "rewardPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "10488:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1343,
																		"name": "multiplier",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "10473:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 240,
																	"src": "10473:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10473:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10449:54:5"
														},
														{
															"assignments": [
																1349
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1349,
																	"mutability": "mutable",
																	"name": "adjustedTokenPerShare",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1374,
																	"src": "10517:29:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1348,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10517:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1360,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1357,
																				"name": "stakedTokenSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1322,
																				"src": "10627:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1354,
																						"name": "PRECISION_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 650,
																						"src": "10605:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1352,
																						"name": "wakandaReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1342,
																						"src": "10587:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 240,
																					"src": "10587:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10587:35:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 257,
																			"src": "10587:39:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10587:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1350,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "10549:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 160,
																	"src": "10549:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10549:110:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10517:142:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1370,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1316,
																			"src": "10845:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																				"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																			}
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 662,
																		"src": "10845:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1367,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "10802:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1364,
																						"name": "adjustedTokenPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1349,
																						"src": "10754:21:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1361,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1316,
																							"src": "10696:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$663_storage_ptr",
																								"typeString": "struct WakandaPoolInitializable.UserInfo storage pointer"
																							}
																						},
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 660,
																						"src": "10696:32:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 240,
																					"src": "10696:57:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10696:80:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 257,
																			"src": "10696:105:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10696:123:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 177,
																	"src": "10696:148:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10696:165:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1314,
															"id": 1373,
															"nodeType": "Return",
															"src": "10673:188:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "f40f0f52",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1391,
												"src": "10136:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10135:15:5"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1391,
												"src": "10174:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10174:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10173:9:5"
									},
									"scope": 1492,
									"src": "10113:933:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "11174:561:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1394,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11188:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11188:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1396,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11204:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11188:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "11184:68:5",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "11221:31:5",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1393,
															"id": 1398,
															"nodeType": "Return",
															"src": "11235:7:5"
														}
													]
												}
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "stakedTokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1449,
														"src": "11262:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11262:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1404,
												"initialValue": {
													"argumentTypes": null,
													"id": 1403,
													"name": "stakedByUsers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "11290:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11262:41:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1405,
														"name": "stakedTokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "11318:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11339:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11318:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "11314:103:5",
												"trueBody": {
													"id": 1414,
													"nodeType": "Block",
													"src": "11342:75:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1408,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "11356:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1409,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "11374:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11374:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11356:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "11356:30:5"
														},
														{
															"expression": null,
															"functionReturnParameters": 1393,
															"id": 1413,
															"nodeType": "Return",
															"src": "11400:7:5"
														}
													]
												}
											},
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1449,
														"src": "11427:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11427:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1419,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "11463:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1420,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "11480:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11480:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1418,
														"name": "_getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "11448:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11448:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11427:66:5"
											},
											{
												"assignments": [
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "wakandaReward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1449,
														"src": "11503:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1430,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1428,
															"name": "rewardPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "11542:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1426,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "11527:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 240,
														"src": "11527:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11527:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:54:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1431,
														"name": "accTokenPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "11567:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1439,
																		"name": "stakedTokenSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "11660:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1436,
																				"name": "PRECISION_FACTOR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "11638:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1434,
																				"name": "wakandaReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1425,
																				"src": "11620:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 240,
																			"src": "11620:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11620:35:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 257,
																	"src": "11620:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11620:58:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1432,
																"name": "accTokenPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "11586:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 160,
															"src": "11586:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11586:102:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11567:121:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "11567:121:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1444,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11698:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1445,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11716:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11716:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11698:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "11698:30:5"
											}
										]
									},
									"documentation": null,
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11162:2:5"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11174:0:5"
									},
									"scope": 1492,
									"src": "11142:593:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "12014:217:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1459,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "12028:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1460,
														"name": "bonusEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "12035:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12028:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1468,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "12106:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1469,
															"name": "bonusEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "12115:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12106:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1479,
														"nodeType": "Block",
														"src": "12169:56:5",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1476,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1452,
																			"src": "12208:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1474,
																			"name": "bonusEndBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "12190:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "12190:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12190:24:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1458,
																"id": 1478,
																"nodeType": "Return",
																"src": "12183:31:5"
															}
														]
													},
													"id": 1480,
													"nodeType": "IfStatement",
													"src": "12102:123:5",
													"trueBody": {
														"id": 1473,
														"nodeType": "Block",
														"src": "12130:33:5",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12151:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1458,
																"id": 1472,
																"nodeType": "Return",
																"src": "12144:8:5"
															}
														]
													}
												},
												"id": 1481,
												"nodeType": "IfStatement",
												"src": "12024:201:5",
												"trueBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "12050:46:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1464,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "12079:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1462,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "12071:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 177,
																	"src": "12071:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12071:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1458,
															"id": 1466,
															"nodeType": "Return",
															"src": "12064:21:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getMultiplier",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1483,
												"src": "11926:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1483,
												"src": "11941:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11941:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11925:28:5"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1483,
												"src": "12001:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12001:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12000:9:5"
									},
									"scope": 1492,
									"src": "11902:329:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "12290:37:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1488,
													"name": "stakedByUsers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "12307:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1489,
												"nodeType": "Return",
												"src": "12300:20:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2de68155",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalWKDStaked",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12260:2:5"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1491,
												"src": "12284:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12284:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12283:6:5"
									},
									"scope": 1492,
									"src": "12237:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1493,
							"src": "452:11877:5"
						}
					],
					"src": "33:12297:5"
				},
				"id": 5
			},
			"src/helpers/IBEP20.sol": {
				"ast": {
					"absolutePath": "src/helpers/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							1593
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1494,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1593,
							"linearizedBaseContracts": [
								1593
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "81:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "172:2:6"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1500,
												"src": "198:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "197:9:6"
									},
									"scope": 1593,
									"src": "152:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "213:51:6",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 1506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:6"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1506,
												"src": "312:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1503,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "312:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "311:7:6"
									},
									"scope": 1593,
									"src": "269:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "325:49:6",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:6"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1512,
												"src": "420:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "420:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:15:6"
									},
									"scope": 1593,
									"src": "379:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "441:47:6",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:2:6"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1518,
												"src": "532:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:15:6"
									},
									"scope": 1593,
									"src": "493:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "553:52:6",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:2:6"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1524,
												"src": "653:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:9:6"
									},
									"scope": 1593,
									"src": "610:52:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "668:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1532,
												"src": "764:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "763:17:6"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1532,
												"src": "804:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "803:9:6"
									},
									"scope": 1593,
									"src": "745:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "819:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1542,
												"src": "1051:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1542,
												"src": "1070:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1050:35:6"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1542,
												"src": "1120:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1120:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1119:6:6"
									},
									"scope": 1593,
									"src": "1033:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "1132:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1552,
												"src": "1420:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1552,
												"src": "1436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1419:33:6"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1552,
												"src": "1500:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1499:9:6"
									},
									"scope": 1593,
									"src": "1401:108:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "1515:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "2179:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "2196:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2178:33:6"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1562,
												"src": "2230:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2230:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2229:6:6"
									},
									"scope": 1593,
									"src": "2162:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "2242:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "2574:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "2598:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "2625:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2625:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2564:81:6"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1574,
												"src": "2664:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2664:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2663:6:6"
									},
									"scope": 1593,
									"src": "2543:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "2676:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1583,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "2854:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "2876:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "2896:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2853:57:6"
									},
									"src": "2839:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "2917:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1592,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1592,
												"src": "3094:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1592,
												"src": "3125:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1592,
												"src": "3158:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3084:93:6"
									},
									"src": "3070:108:6"
								}
							],
							"scope": 1594,
							"src": "58:3122:6"
						}
					],
					"src": "33:3148:6"
				},
				"id": 6
			},
			"src/helpers/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "src/helpers/SafeBEP20.sol",
					"exportedSymbols": {
						"SafeBEP20": [
							1805
						]
					},
					"id": 1806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "src/helpers/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 1596,
							"nodeType": "ImportDirective",
							"scope": 1806,
							"sourceUnit": 1594,
							"src": "57:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/utils/Address.sol",
							"id": 1597,
							"nodeType": "ImportDirective",
							"scope": 1806,
							"sourceUnit": 572,
							"src": "80:104:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0/contracts/math/SafeMath.sol",
							"id": 1598,
							"nodeType": "ImportDirective",
							"scope": 1806,
							"sourceUnit": 328,
							"src": "185:104:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1599,
								"nodeType": "StructuredDocumentation",
								"src": "291:457:7",
								"text": " @title SafeBEP20\n @dev Wrappers around BEP20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1805,
							"linearizedBaseContracts": [
								1805
							],
							"name": "SafeBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1602,
									"libraryName": {
										"contractScope": null,
										"id": 1600,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 327,
										"src": "779:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$327",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "773:27:7",
									"typeName": {
										"id": 1601,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1605,
									"libraryName": {
										"contractScope": null,
										"id": 1603,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 571,
										"src": "811:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$571",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "805:26:7",
									"typeName": {
										"id": 1604,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "823:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "939:137:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1615,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "982:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1618,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1607,
																			"src": "1024:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1593",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1542,
																		"src": "1024:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1024:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1621,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "1049:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "1053:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1616,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1001:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1001:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1001:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1614,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "949:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:120:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "949:120:7"
											}
										]
									},
									"documentation": null,
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "868:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1606,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "868:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "890:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "910:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "858:71:7"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "939:0:7"
									},
									"scope": 1805,
									"src": "837:239:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "1210:147:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1639,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "1253:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1642,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "1295:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1593",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1574,
																		"src": "1295:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1295:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1645,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "1324:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1646,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "1330:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "1334:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1640,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1272:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1272:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1272:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1638,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "1220:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:130:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "1220:130:7"
											}
										]
									},
									"documentation": null,
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "1117:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1628,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "1117:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "1139:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "1161:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "1181:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1107:93:7"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:7"
									},
									"scope": 1805,
									"src": "1082:275:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "1723:584:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1663,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "2025:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2034:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2025:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1666,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2024:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1671,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "2065:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1805",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1805",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 1670,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2057:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1669,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2057:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2057:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1673,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1657,
																					"src": "2072:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1667,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1655,
																					"src": "2041:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$1593",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 1668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1552,
																				"src": "2041:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2041:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2084:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2041:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1677,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2024:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2100:56:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2003:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:163:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "2003:163:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1683,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "2209:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1686,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "2251:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1593",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1562,
																		"src": "2251:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2251:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1689,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "2275:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "2284:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1684,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2228:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2228:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2228:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1682,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "2176:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:124:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "2176:124:7"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "1363:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "1647:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1654,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "1647:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "1669:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1695,
												"src": "1694:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1637:76:7"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1723:0:7"
									},
									"scope": 1805,
									"src": "1617:690:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "2429:315:7",
										"statements": [
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1730,
														"src": "2439:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2439:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1717,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1715,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "2519:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1710,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2486:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1805",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1805",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2478:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1708,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2478:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2478:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1712,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "2493:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1706,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "2462:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1593",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1552,
																"src": "2462:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2462:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 160,
														"src": "2462:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2439:95:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1719,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "2577:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1722,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1697,
																			"src": "2636:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1593",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1562,
																		"src": "2636:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2636:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1725,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "2676:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1726,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "2701:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1720,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2596:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2596:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2596:131:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1718,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "2544:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2544:193:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "2544:193:7"
											}
										]
									},
									"documentation": null,
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "2353:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1696,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "2353:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "2375:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1731,
												"src": "2400:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2343:76:7"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2429:0:7"
									},
									"scope": 1805,
									"src": "2313:431:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "2866:315:7",
										"statements": [
											{
												"assignments": [
													1741
												],
												"declarations": [
													{
														"constant": false,
														"id": 1741,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1766,
														"src": "2876:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1740,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2876:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1751,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "2956:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1746,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2923:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1805",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1805",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2915:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1744,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2915:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2915:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1748,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "2930:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1742,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1733,
																	"src": "2899:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1593",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1552,
																"src": "2899:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2899:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "2899:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2876:95:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1755,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "3014:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1758,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "3073:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$1593",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1562,
																		"src": "3073:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3073:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1761,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "3113:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1762,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "3138:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1756,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "3033:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3033:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3033:131:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$1593",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1754,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "2981:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$1593_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2981:193:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "2981:193:7"
											}
										]
									},
									"documentation": null,
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1767,
												"src": "2790:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1732,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "2790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1767,
												"src": "2812:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1767,
												"src": "2837:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2780:76:7"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2866:0:7"
									},
									"scope": 1805,
									"src": "2750:431:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "3634:773:7",
										"statements": [
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1803,
														"src": "3983:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1775,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3983:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1785,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1782,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "4050:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4068:34:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1779,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "4017:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$1593",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$1593",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4009:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4009:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4009:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 418,
														"src": "4009:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:103:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3983:129:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1786,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "4126:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4126:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4146:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4126:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1802,
												"nodeType": "IfStatement",
												"src": "4122:279:7",
												"trueBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "4149:252:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1793,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1776,
																				"src": "4295:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1795,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4308:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1794,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4308:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1796,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4307:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1791,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "4284:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4284:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4284:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4332:44:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1790,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "4259:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4259:131:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1800,
															"nodeType": "ExpressionStatement",
															"src": "4259:131:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "3187:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1804,
												"src": "3593:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$1593",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1769,
													"name": "IBEP20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1593,
													"src": "3593:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1593",
														"typeString": "contract IBEP20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1804,
												"src": "3607:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3592:33:7"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:7"
									},
									"scope": 1805,
									"src": "3564:843:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1806,
							"src": "749:3660:7"
						}
					],
					"src": "32:4378:7"
				},
				"id": 7
			}
		}
	}
}